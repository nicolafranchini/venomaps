{"version":3,"file":"venomaps-bundle.js","sources":["../DEV/node_modules/ol/events/Event.js","../DEV/node_modules/ol/ObjectEventType.js","../DEV/node_modules/ol/Disposable.js","../DEV/node_modules/ol/array.js","../DEV/node_modules/ol/functions.js","../DEV/node_modules/ol/obj.js","../DEV/node_modules/ol/events/Target.js","../DEV/node_modules/ol/events/EventType.js","../DEV/node_modules/ol/events.js","../DEV/node_modules/ol/Observable.js","../DEV/node_modules/ol/util.js","../DEV/node_modules/ol/Object.js","../DEV/node_modules/ol/CollectionEventType.js","../DEV/node_modules/ol/Collection.js","../DEV/node_modules/ol/asserts.js","../DEV/node_modules/ol/Feature.js","../DEV/node_modules/ol/has.js","../DEV/node_modules/ol/transform.js","../DEV/node_modules/ol/extent/Relationship.js","../DEV/node_modules/ol/extent.js","../DEV/node_modules/ol/proj/Units.js","../DEV/node_modules/ol/proj/Projection.js","../DEV/node_modules/ol/proj/epsg3857.js","../DEV/node_modules/ol/proj/epsg4326.js","../DEV/node_modules/ol/proj/projections.js","../DEV/node_modules/ol/proj/transforms.js","../DEV/node_modules/ol/math.js","../DEV/node_modules/ol/coordinate.js","../DEV/node_modules/ol/sphere.js","../DEV/node_modules/ol/console.js","../DEV/node_modules/ol/proj.js","../DEV/node_modules/ol/geom/flat/transform.js","../DEV/node_modules/ol/geom/Geometry.js","../DEV/node_modules/ol/geom/SimpleGeometry.js","../DEV/node_modules/ol/geom/flat/closest.js","../DEV/node_modules/ol/geom/flat/deflate.js","../DEV/node_modules/ol/geom/flat/simplify.js","../DEV/node_modules/ol/geom/flat/inflate.js","../DEV/node_modules/ol/geom/flat/area.js","../DEV/node_modules/ol/geom/LinearRing.js","../DEV/node_modules/ol/geom/Point.js","../DEV/node_modules/ol/geom/flat/contains.js","../DEV/node_modules/ol/geom/flat/interiorpoint.js","../DEV/node_modules/ol/geom/flat/intersectsextent.js","../DEV/node_modules/ol/geom/flat/segments.js","../DEV/node_modules/ol/geom/flat/reverse.js","../DEV/node_modules/ol/geom/flat/orient.js","../DEV/node_modules/ol/geom/Polygon.js","../DEV/node_modules/ol/render/EventType.js","../DEV/node_modules/ol/style/Fill.js","../DEV/node_modules/ol/geom/flat/interpolate.js","../DEV/node_modules/ol/geom/flat/length.js","../DEV/node_modules/ol/style/Stroke.js","../DEV/node_modules/ol/ImageState.js","../DEV/node_modules/ol/size.js","../DEV/node_modules/ol/style/Image.js","../DEV/node_modules/color-space/rgb.js","../DEV/node_modules/color-space/xyz.js","../DEV/node_modules/color-space/luv.js","../DEV/node_modules/color-space/lchuv.js","../DEV/node_modules/color-name/index.js","../DEV/node_modules/color-parse/index.js","../DEV/node_modules/color-space/hsl.js","../DEV/node_modules/color-rgba/index.js","../DEV/node_modules/ol/color.js","../DEV/node_modules/ol/colorlike.js","../DEV/node_modules/ol/dom.js","../DEV/node_modules/ol/css.js","../DEV/node_modules/ol/render/canvas.js","../DEV/node_modules/ol/style/RegularShape.js","../DEV/node_modules/ol/style/Circle.js","../DEV/node_modules/ol/style/Style.js","../DEV/node_modules/ol/style/Text.js","../DEV/node_modules/ol/layer/Property.js","../DEV/node_modules/ol/layer/Base.js","../DEV/node_modules/ol/ViewHint.js","../DEV/node_modules/ol/ViewProperty.js","../DEV/node_modules/ol/tilegrid/common.js","../DEV/node_modules/ol/centerconstraint.js","../DEV/node_modules/ol/resolutionconstraint.js","../DEV/node_modules/ol/rotationconstraint.js","../DEV/node_modules/ol/easing.js","../DEV/node_modules/ol/View.js","../DEV/node_modules/ol/layer/Layer.js","../DEV/node_modules/rbush/rbush.min.js","../DEV/node_modules/ol/Image.js","../DEV/node_modules/ol/style/IconImageCache.js","../DEV/node_modules/ol/style/IconImage.js","../DEV/node_modules/ol/style/Icon.js","../DEV/node_modules/ol/expr/expression.js","../DEV/node_modules/ol/expr/cpu.js","../DEV/node_modules/ol/render/canvas/style.js","../DEV/node_modules/ol/layer/BaseVector.js","../DEV/node_modules/ol/render/canvas/Instruction.js","../DEV/node_modules/ol/render/VectorContext.js","../DEV/node_modules/ol/render/canvas/Builder.js","../DEV/node_modules/ol/render/canvas/PolygonBuilder.js","../DEV/node_modules/ol/geom/flat/linechunk.js","../DEV/node_modules/ol/geom/flat/straightchunk.js","../DEV/node_modules/ol/render/canvas/TextBuilder.js","../DEV/node_modules/ol/render/canvas/BuilderGroup.js","../DEV/node_modules/ol/render/canvas/ImageBuilder.js","../DEV/node_modules/ol/render/canvas/LineStringBuilder.js","../DEV/node_modules/ol/renderer/Layer.js","../DEV/node_modules/ol/render/Event.js","../DEV/node_modules/ol/renderer/canvas/Layer.js","../DEV/node_modules/ol/geom/flat/textpath.js","../DEV/node_modules/ol/render/canvas/Executor.js","../DEV/node_modules/ol/render/canvas/ExecutorGroup.js","../DEV/node_modules/ol/render/canvas/Immediate.js","../DEV/node_modules/ol/render/canvas/hitdetect.js","../DEV/node_modules/ol/renderer/vector.js","../DEV/node_modules/ol/renderer/canvas/VectorLayer.js","../DEV/node_modules/ol/layer/Vector.js","../DEV/node_modules/ol/structs/RBush.js","../DEV/node_modules/ol/render/Feature.js","../DEV/node_modules/ol/geom/flat/center.js","../DEV/node_modules/ol/source/Source.js","../DEV/node_modules/ol/source/VectorEventType.js","../DEV/node_modules/ol/loadingstrategy.js","../DEV/node_modules/ol/featureloader.js","../DEV/node_modules/ol/source/Vector.js","../DEV/node_modules/ol/layer/Graticule.js","../DEV/node_modules/ol/TileState.js","../DEV/node_modules/ol/Tile.js","../DEV/node_modules/ol/ImageTile.js","../DEV/node_modules/ol/Kinetic.js","../DEV/node_modules/ol/renderer/Map.js","../DEV/node_modules/ol/renderer/Composite.js","../DEV/node_modules/ol/layer/Group.js","../DEV/node_modules/ol/MapEvent.js","../DEV/node_modules/ol/MapBrowserEvent.js","../DEV/node_modules/ol/MapBrowserEventType.js","../DEV/node_modules/ol/pointer/EventType.js","../DEV/node_modules/ol/MapBrowserEventHandler.js","../DEV/node_modules/ol/MapEventType.js","../DEV/node_modules/ol/MapProperty.js","../DEV/node_modules/ol/structs/PriorityQueue.js","../DEV/node_modules/ol/TileQueue.js","../DEV/node_modules/ol/control/Control.js","../DEV/node_modules/ol/control/Attribution.js","../DEV/node_modules/ol/control/Rotate.js","../DEV/node_modules/ol/control/Zoom.js","../DEV/node_modules/ol/control/defaults.js","../DEV/node_modules/ol/interaction/Property.js","../DEV/node_modules/ol/interaction/Interaction.js","../DEV/node_modules/ol/interaction/DoubleClickZoom.js","../DEV/node_modules/ol/interaction/Pointer.js","../DEV/node_modules/ol/events/condition.js","../DEV/node_modules/ol/interaction/DragPan.js","../DEV/node_modules/ol/interaction/DragRotate.js","../DEV/node_modules/ol/render/Box.js","../DEV/node_modules/ol/interaction/DragBox.js","../DEV/node_modules/ol/interaction/DragZoom.js","../DEV/node_modules/ol/events/Key.js","../DEV/node_modules/ol/interaction/KeyboardPan.js","../DEV/node_modules/ol/interaction/KeyboardZoom.js","../DEV/node_modules/ol/interaction/MouseWheelZoom.js","../DEV/node_modules/ol/interaction/PinchRotate.js","../DEV/node_modules/ol/interaction/PinchZoom.js","../DEV/node_modules/ol/interaction/defaults.js","../DEV/node_modules/ol/Map.js","../DEV/node_modules/ol/Overlay.js","../DEV/node_modules/ol/structs/LRUCache.js","../DEV/node_modules/ol/tilecoord.js","../DEV/node_modules/ol/TileCache.js","../DEV/node_modules/ol/TileRange.js","../DEV/node_modules/ol/reproj/Triangulation.js","../DEV/node_modules/ol/reproj.js","../DEV/node_modules/ol/reproj/Tile.js","../DEV/node_modules/ol/reproj/common.js","../DEV/node_modules/ol/source/TileEventType.js","../DEV/node_modules/ol/tilegrid/TileGrid.js","../DEV/node_modules/ol/tilegrid.js","../DEV/node_modules/ol/source/Tile.js","../DEV/node_modules/ol/tileurlfunction.js","../DEV/node_modules/ol/source/UrlTile.js","../DEV/node_modules/ol/source/TileImage.js","../DEV/node_modules/ol/source/XYZ.js","../DEV/node_modules/ol/source/Cluster.js","../DEV/node_modules/@petamoriken/float16/src/_util/primordials.mjs","../DEV/node_modules/@petamoriken/float16/src/_util/arrayIterator.mjs","../DEV/node_modules/@petamoriken/float16/src/_util/converter.mjs","../DEV/node_modules/xml-utils/get-attribute.js","../DEV/node_modules/xml-utils/index-of-match.js","../DEV/node_modules/xml-utils/index-of-match-end.js","../DEV/node_modules/xml-utils/count-substring.js","../DEV/node_modules/xml-utils/find-tag-by-name.js","../DEV/node_modules/xml-utils/find-tags-by-name.js","../DEV/node_modules/geotiff/dist-module/globals.js","../DEV/node_modules/geotiff/dist-module/compression/index.js","../DEV/node_modules/geotiff/dist-module/pool.js","../DEV/node_modules/quick-lru/index.js","../DEV/node_modules/geotiff/dist-module/utils.js","../DEV/node_modules/geotiff/dist-module/geotiffwriter.js","../DEV/node_modules/geotiff/dist-module/predictor.js","../DEV/node_modules/geotiff/dist-module/compression/basedecoder.js","../DEV/node_modules/geotiff/dist-module/geotiff.js","../DEV/node_modules/ol/source/OSM.js","../DEV/node_modules/ol/layer/TileProperty.js","../DEV/node_modules/ol/layer/BaseTile.js","../DEV/node_modules/ol/renderer/canvas/TileLayer.js","../DEV/node_modules/ol/layer/Tile.js","../DEV/node_modules/ol/source/Raster.js","../DEV/node_modules/ol/webgl/Helper.js","../DEV/node_modules/ol/webgl.js","../DEV/node_modules/earcut/src/earcut.js","../DEV/node_modules/ol/webgl/PaletteTexture.js","../DEV/node_modules/ol/renderer/webgl/TileLayer.js","../DEV/node_modules/ol/renderer/webgl/TileLayerBase.js","../DEV/node_modules/ol/expr/gpu.js","../DEV/node_modules/ol/control/FullScreen.js","../DEV/venomaps.js","../DEV/node_modules/ol/render.js","../DEV/node_modules/geotiff/dist-module/compression/raw.js","../DEV/node_modules/geotiff/dist-module/compression/lzw.js","../DEV/node_modules/geotiff/dist-module/compression/jpeg.js","../DEV/node_modules/pako/dist/pako.esm.mjs","../DEV/node_modules/geotiff/dist-module/compression/deflate.js","../DEV/node_modules/geotiff/dist-module/compression/packbits.js","../DEV/node_modules/lerc/LercDecode.js","../DEV/node_modules/zstddec/dist/zstddec.modern.js","../DEV/node_modules/geotiff/dist-module/compression/lerc.js","../DEV/node_modules/geotiff/dist-module/compression/webimage.js","../DEV/node_modules/web-worker/cjs/browser.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries'\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/* eslint-disable no-restricted-globals, no-restricted-syntax */\n/* global SharedArrayBuffer */\n\nimport { CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT } from \"./messages.mjs\";\n\n/** @type {<T extends (...args: any) => any>(target: T) => (thisArg: ThisType<T>, ...args: any[]) => any} */\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\n\n/** @type {(target: any, key: string | symbol) => (thisArg: any, ...args: any[]) => any} */\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\n\n// Reflect\nexport const {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\n\n// Proxy\nexport const NativeProxy = Proxy;\n\n// Number\nexport const {\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = Number;\n\n// Symbol\nexport const {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\n\n// Object\nexport const NativeObject = Object;\nexport const {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\n/** @type {(object: object, key: PropertyKey) => Function | undefined} */\nexport const ObjectPrototype__lookupGetter__ = /** @type {any} */ (ObjectPrototype).__lookupGetter__\n  ? uncurryThis(/** @type {any} */ (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const ObjectHasOwn = /** @type {any} */ (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\n\n// Array\nconst NativeArray = Array;\nexport const ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\n/** @type {(array: ArrayLike<unknown>, separator?: string) => string} */\nexport const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n/** @type {<T>(array: T[], ...items: T[]) => number} */\nexport const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n/** @type {(array: ArrayLike<unknown>, ...opts: any[]) => string} */\nexport const ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nexport const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n/** @type {<T>(array: T[]) => IterableIterator<T>} */\nexport const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n\n// Math\nexport const {\n  abs: MathAbs,\n  trunc: MathTrunc,\n} = Math;\n\n// ArrayBuffer\nexport const NativeArrayBuffer = ArrayBuffer;\nexport const ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\n/** @type {(buffer: ArrayBuffer, begin?: number, end?: number) => number} */\nexport const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n/** @type {(buffer: ArrayBuffer) => ArrayBuffer} */\nexport const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n\n// SharedArrayBuffer\nexport const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n/** @type {(buffer: SharedArrayBuffer) => SharedArrayBuffer} */\nexport const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n\n// TypedArray\n/** @typedef {Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array} TypedArray */\n/** @type {any} */\nexport const TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nexport const TypedArrayPrototype = TypedArray.prototype;\nexport const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n/** @type {(typedArray: TypedArray) => IterableIterator<number>} */\nexport const TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\n/** @type {(typedArray: TypedArray) => IterableIterator<[number, number]>} */\nexport const TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\n/** @type {(typedArray: TypedArray, array: ArrayLike<number>, offset?: number) => void} */\nexport const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n/** @type {<T extends TypedArray>(typedArray: T) => T} */\nexport const TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\n/** @type {<T extends TypedArray>(typedArray: T, value: number, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n/** @type {<T extends TypedArray>(typedArray: T, target: number, start: number, end?: number) => T} */\nexport const TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\n/** @type {<T extends TypedArray>(typedArray: T, compareFn?: (a: number, b: number) => number) => T} */\nexport const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n/** @type {<T extends TypedArray>(typedArray: T, start?: number, end?: number) => T} */\nexport const TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\n/** @type {((typedArray: TypedArray) => ArrayBuffer)} */\nexport const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\n/** @type {((typedArray: TypedArray) => number)} */\nexport const TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\n/** @type {(target: unknown) => string} */\nexport const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\n\n// Uint8Array\nexport const NativeUint8Array = Uint8Array;\n\n// Uint16Array\nexport const NativeUint16Array = Uint16Array;\n/** @type {Uint16ArrayConstructor[\"from\"]} */\nexport const Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\n\n// Uint32Array\nexport const NativeUint32Array = Uint32Array;\n\n// Float32Array\nexport const NativeFloat32Array = Float32Array;\n\n// ArrayIterator\n/** @type {any} */\nexport const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n/** @type {<T>(arrayIterator: IterableIterator<T>) => IteratorResult<T>} */\nexport const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n\n// Generator\n/** @type {<T = unknown, TReturn = any, TNext = unknown>(generator: Generator<T, TReturn, TNext>, value?: TNext) => T} */\nexport const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n\n// Iterator\nexport const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n\n// DataView\nconst DataViewPrototype = DataView.prototype;\n/** @type {(dataView: DataView, byteOffset: number, littleEndian?: boolean) => number} */\nexport const DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\n/** @type {(dataView: DataView, byteOffset: number, value: number, littleEndian?: boolean) => void} */\nexport const DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\n\n// Error\nexport const NativeTypeError = TypeError;\nexport const NativeRangeError = RangeError;\n\n// WeakSet\n/**\n * Do not construct with arguments to avoid calling the \"add\" method\n * @type {{new <T extends {}>(): WeakSet<T>}}\n */\nexport const NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => Set<T>} */\nexport const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n/** @type {<T extends {}>(set: WeakSet<T>, value: T) => boolean} */\nexport const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n\n// WeakMap\n/**\n * Do not construct with arguments to avoid calling the \"set\" method\n * @type {{new <K extends {}, V>(): WeakMap<K, V>}}\n */\nexport const NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => V} */\nexport const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K) => boolean} */\nexport const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n/** @type {<K extends {}, V>(weakMap: WeakMap<K, V>, key: K, value: V) => WeakMap} */\nexport const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n","import {\n  ArrayIteratorPrototype,\n  ArrayIteratorPrototypeNext,\n  ArrayPrototypeSymbolIterator,\n  GeneratorPrototypeNext,\n  IteratorPrototype,\n  NativeArrayPrototypeSymbolIterator,\n  NativeWeakMap,\n  ObjectCreate,\n  ObjectDefineProperty,\n  ReflectGetOwnPropertyDescriptor,\n  ReflectOwnKeys,\n  SymbolIterator,\n  WeakMapPrototypeGet,\n  WeakMapPrototypeSet,\n} from \"./primordials.mjs\";\n\n/** @type {WeakMap<{}, IterableIterator<any>>} */\nconst arrayIterators = new NativeWeakMap();\n\nconst SafeIteratorPrototype = ObjectCreate(null, {\n  next: {\n    value: function next() {\n      const arrayIterator = WeakMapPrototypeGet(arrayIterators, this);\n      return ArrayIteratorPrototypeNext(arrayIterator);\n    },\n  },\n\n  [SymbolIterator]: {\n    value: function values() {\n      return this;\n    },\n  },\n});\n\n/**\n * Wrap the Array around the SafeIterator If Array.prototype [@@iterator] has been modified\n * @type {<T>(array: T[]) => Iterable<T>}\n */\nexport function safeIfNeeded(array) {\n  if (\n    array[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  ) {\n    return array;\n  }\n\n  const safe = ObjectCreate(SafeIteratorPrototype);\n  WeakMapPrototypeSet(arrayIterators, safe, ArrayPrototypeSymbolIterator(array));\n  return safe;\n}\n\n/** @type {WeakMap<{}, Generator<any>>} */\nconst generators = new NativeWeakMap();\n\n/** @see https://tc39.es/ecma262/#sec-%arrayiteratorprototype%-object */\nconst DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n  next: {\n    value: function next() {\n      const generator = WeakMapPrototypeGet(generators, this);\n      return GeneratorPrototypeNext(generator);\n    },\n    writable: true,\n    configurable: true,\n  },\n});\n\nfor (const key of ReflectOwnKeys(ArrayIteratorPrototype)) {\n  // next method has already defined\n  if (key === \"next\") {\n    continue;\n  }\n\n  // Copy ArrayIteratorPrototype descriptors to DummyArrayIteratorPrototype\n  ObjectDefineProperty(DummyArrayIteratorPrototype, key, ReflectGetOwnPropertyDescriptor(ArrayIteratorPrototype, key));\n}\n\n/**\n * Wrap the Generator around the dummy ArrayIterator\n * @type {<T>(generator: Generator<T>) => IterableIterator<T>}\n */\nexport function wrap(generator) {\n  const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n  WeakMapPrototypeSet(generators, dummy, generator);\n  return dummy;\n}\n","import {\n  EPSILON,\n  MathAbs,\n  NativeArrayBuffer,\n  NativeFloat32Array,\n  NativeUint16Array,\n  NativeUint32Array,\n  NativeUint8Array,\n  NumberIsFinite,\n  NumberIsNaN,\n} from \"./primordials.mjs\";\n\nconst INVERSE_OF_EPSILON = 1 / EPSILON;\n\n/**\n * rounds to the nearest value;\n * if the number falls midway, it is rounded to the nearest value with an even least significant digit\n * @param {number} num\n * @returns {number}\n */\nfunction roundTiesToEven(num) {\n  return (num + INVERSE_OF_EPSILON) - INVERSE_OF_EPSILON;\n}\n\nconst FLOAT16_MIN_VALUE = 6.103515625e-05;\nconst FLOAT16_MAX_VALUE = 65504;\nconst FLOAT16_EPSILON = 0.0009765625;\n\nconst FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE = FLOAT16_EPSILON * FLOAT16_MIN_VALUE;\nconst FLOAT16_EPSILON_DEVIDED_BY_EPSILON = FLOAT16_EPSILON * INVERSE_OF_EPSILON;\n\n/**\n * round a number to a half float number\n * @param {unknown} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16(num) {\n  const number = +num;\n\n  // NaN, Infinity, -Infinity, 0, -0\n  if (!NumberIsFinite(number) || number === 0) {\n    return number;\n  }\n\n  // finite except 0, -0\n  const sign = number > 0 ? 1 : -1;\n  const absolute = MathAbs(number);\n\n  // small number\n  if (absolute < FLOAT16_MIN_VALUE) {\n    return sign * roundTiesToEven(absolute / FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE) * FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE;\n  }\n\n  const temp = (1 + FLOAT16_EPSILON_DEVIDED_BY_EPSILON) * absolute;\n  const result = temp - (temp - absolute);\n\n  // large number\n  if (result > FLOAT16_MAX_VALUE || NumberIsNaN(result)) {\n    return sign * Infinity;\n  }\n\n  return sign * result;\n}\n\n// base algorithm: http://fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst buffer = new NativeArrayBuffer(4);\nconst floatView = new NativeFloat32Array(buffer);\nconst uint32View = new NativeUint32Array(buffer);\n\nconst baseTable = new NativeUint16Array(512);\nconst shiftTable = new NativeUint8Array(512);\n\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n\n  // very small number (0, -0)\n  if (e < -27) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // small number (denorm)\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n\n  // normal number\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n\n  // large number (Infinity, -Infinity)\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // stay (NaN, Infinity, -Infinity)\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\n\n/**\n * round a number to a half float number bits\n * @param {unknown} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n  floatView[0] = roundToFloat16(num);\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\nconst mantissaTable = new NativeUint32Array(2048);\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13; // zero pad mantissa bits\n  let e = 0; // zero exponent\n\n  // normalized\n  while ((m & 0x00800000) === 0) {\n    m <<= 1;\n    e -= 0x00800000; // decrement exponent\n  }\n\n  m &= ~0x00800000; // clear leading 1 bit\n  e += 0x38800000; // adjust bias\n\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nconst exponentTable = new NativeUint32Array(64);\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\nconst offsetTable = new NativeUint16Array(64);\nfor (let i = 1; i < 64; ++i) {\n  if (i !== 32) {\n    offsetTable[i] = 1024;\n  }\n}\n\n/**\n * convert a half float number bits to a number\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n  const i = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[i] + (float16bits & 0x3ff)] + exponentTable[i];\n  return floatView[0];\n}\n","function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"[xml-utils] getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  // only search for attributes in the opening tag\n  const opening = xml.slice(0, xml.indexOf(\">\") + 1);\n\n  const quotechars = ['\"', \"'\"];\n  for (let i = 0; i < quotechars.length; i++) {\n    const char = quotechars[i];\n    const pattern = attributeName + \"\\\\=\" + char + \"([^\" + char + \"]*)\" + char;\n    if (debug) console.log(\"[xml-utils] pattern:\", pattern);\n\n    const re = new RegExp(pattern);\n    const match = re.exec(opening);\n    if (debug) console.log(\"[xml-utils] match:\", match);\n    if (match) return match[1];\n  }\n}\n\nmodule.exports = getAttribute;\nmodule.exports.default = getAttribute;\n","function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\nmodule.exports.default = indexOfMatch;\n","function indexOfMatchEnd(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index + match[0].length - 1;\n  else return -1;\n}\n\nmodule.exports = indexOfMatchEnd;\nmodule.exports.default = indexOfMatchEnd;\n","function countSubstring(string, substring) {\n  const pattern = new RegExp(substring, \"g\");\n  const match = string.match(pattern);\n  return match ? match.length : 0;\n}\n\nmodule.exports = countSubstring;\nmodule.exports.default = countSubstring;\n","const indexOfMatch = require(\"./index-of-match.js\");\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n  const nested = !(options && typeof options.nested === false);\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\n\\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName + \"[ \\n\\t>]\");\n        closings += countSubstring(clip, \"</\" + tagName + \">\");\n        // we can't have more openings than closings\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;\n","const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  const nested = options && typeof options.nested === \"boolean\" ? options.nested : true;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    if (nested) {\n      startIndex = tag.start + 1 + tagName.length;\n    } else {\n      startIndex = tag.end;\n    }\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\nmodule.exports.default = findTagsByName;\n","export const fieldTagNames = {\n  // TIFF Baseline\n  0x013B: 'Artist',\n  0x0102: 'BitsPerSample',\n  0x0109: 'CellLength',\n  0x0108: 'CellWidth',\n  0x0140: 'ColorMap',\n  0x0103: 'Compression',\n  0x8298: 'Copyright',\n  0x0132: 'DateTime',\n  0x0152: 'ExtraSamples',\n  0x010A: 'FillOrder',\n  0x0121: 'FreeByteCounts',\n  0x0120: 'FreeOffsets',\n  0x0123: 'GrayResponseCurve',\n  0x0122: 'GrayResponseUnit',\n  0x013C: 'HostComputer',\n  0x010E: 'ImageDescription',\n  0x0101: 'ImageLength',\n  0x0100: 'ImageWidth',\n  0x010F: 'Make',\n  0x0119: 'MaxSampleValue',\n  0x0118: 'MinSampleValue',\n  0x0110: 'Model',\n  0x00FE: 'NewSubfileType',\n  0x0112: 'Orientation',\n  0x0106: 'PhotometricInterpretation',\n  0x011C: 'PlanarConfiguration',\n  0x0128: 'ResolutionUnit',\n  0x0116: 'RowsPerStrip',\n  0x0115: 'SamplesPerPixel',\n  0x0131: 'Software',\n  0x0117: 'StripByteCounts',\n  0x0111: 'StripOffsets',\n  0x00FF: 'SubfileType',\n  0x0107: 'Threshholding',\n  0x011A: 'XResolution',\n  0x011B: 'YResolution',\n\n  // TIFF Extended\n  0x0146: 'BadFaxLines',\n  0x0147: 'CleanFaxData',\n  0x0157: 'ClipPath',\n  0x0148: 'ConsecutiveBadFaxLines',\n  0x01B1: 'Decode',\n  0x01B2: 'DefaultImageColor',\n  0x010D: 'DocumentName',\n  0x0150: 'DotRange',\n  0x0141: 'HalftoneHints',\n  0x015A: 'Indexed',\n  0x015B: 'JPEGTables',\n  0x011D: 'PageName',\n  0x0129: 'PageNumber',\n  0x013D: 'Predictor',\n  0x013F: 'PrimaryChromaticities',\n  0x0214: 'ReferenceBlackWhite',\n  0x0153: 'SampleFormat',\n  0x0154: 'SMinSampleValue',\n  0x0155: 'SMaxSampleValue',\n  0x022F: 'StripRowCounts',\n  0x014A: 'SubIFDs',\n  0x0124: 'T4Options',\n  0x0125: 'T6Options',\n  0x0145: 'TileByteCounts',\n  0x0143: 'TileLength',\n  0x0144: 'TileOffsets',\n  0x0142: 'TileWidth',\n  0x012D: 'TransferFunction',\n  0x013E: 'WhitePoint',\n  0x0158: 'XClipPathUnits',\n  0x011E: 'XPosition',\n  0x0211: 'YCbCrCoefficients',\n  0x0213: 'YCbCrPositioning',\n  0x0212: 'YCbCrSubSampling',\n  0x0159: 'YClipPathUnits',\n  0x011F: 'YPosition',\n\n  // EXIF\n  0x9202: 'ApertureValue',\n  0xA001: 'ColorSpace',\n  0x9004: 'DateTimeDigitized',\n  0x9003: 'DateTimeOriginal',\n  0x8769: 'Exif IFD',\n  0x9000: 'ExifVersion',\n  0x829A: 'ExposureTime',\n  0xA300: 'FileSource',\n  0x9209: 'Flash',\n  0xA000: 'FlashpixVersion',\n  0x829D: 'FNumber',\n  0xA420: 'ImageUniqueID',\n  0x9208: 'LightSource',\n  0x927C: 'MakerNote',\n  0x9201: 'ShutterSpeedValue',\n  0x9286: 'UserComment',\n\n  // IPTC\n  0x83BB: 'IPTC',\n\n  // ICC\n  0x8773: 'ICC Profile',\n\n  // XMP\n  0x02BC: 'XMP',\n\n  // GDAL\n  0xA480: 'GDAL_METADATA',\n  0xA481: 'GDAL_NODATA',\n\n  // Photoshop\n  0x8649: 'Photoshop',\n\n  // GeoTiff\n  0x830E: 'ModelPixelScale',\n  0x8482: 'ModelTiepoint',\n  0x85D8: 'ModelTransformation',\n  0x87AF: 'GeoKeyDirectory',\n  0x87B0: 'GeoDoubleParams',\n  0x87B1: 'GeoAsciiParams',\n\n  // LERC\n  0xC5F2: 'LercParameters',\n};\n\nexport const fieldTags = {};\nfor (const key in fieldTagNames) {\n  if (fieldTagNames.hasOwnProperty(key)) {\n    fieldTags[fieldTagNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const fieldTagTypes = {\n  256: 'SHORT',\n  257: 'SHORT',\n  258: 'SHORT',\n  259: 'SHORT',\n  262: 'SHORT',\n  273: 'LONG',\n  274: 'SHORT',\n  277: 'SHORT',\n  278: 'LONG',\n  279: 'LONG',\n  282: 'RATIONAL',\n  283: 'RATIONAL',\n  284: 'SHORT',\n  286: 'SHORT',\n  287: 'RATIONAL',\n  296: 'SHORT',\n  297: 'SHORT',\n  305: 'ASCII',\n  306: 'ASCII',\n  338: 'SHORT',\n  339: 'SHORT',\n  513: 'LONG',\n  514: 'LONG',\n  1024: 'SHORT',\n  1025: 'SHORT',\n  2048: 'SHORT',\n  2049: 'ASCII',\n  3072: 'SHORT',\n  3073: 'ASCII',\n  33550: 'DOUBLE',\n  33922: 'DOUBLE',\n  34264: 'DOUBLE',\n  34665: 'LONG',\n  34735: 'SHORT',\n  34736: 'DOUBLE',\n  34737: 'ASCII',\n  42113: 'ASCII',\n};\n\nexport const arrayFields = [\n  fieldTags.BitsPerSample,\n  fieldTags.ExtraSamples,\n  fieldTags.SampleFormat,\n  fieldTags.StripByteCounts,\n  fieldTags.StripOffsets,\n  fieldTags.StripRowCounts,\n  fieldTags.TileByteCounts,\n  fieldTags.TileOffsets,\n  fieldTags.SubIFDs,\n];\n\nexport const fieldTypeNames = {\n  0x0001: 'BYTE',\n  0x0002: 'ASCII',\n  0x0003: 'SHORT',\n  0x0004: 'LONG',\n  0x0005: 'RATIONAL',\n  0x0006: 'SBYTE',\n  0x0007: 'UNDEFINED',\n  0x0008: 'SSHORT',\n  0x0009: 'SLONG',\n  0x000A: 'SRATIONAL',\n  0x000B: 'FLOAT',\n  0x000C: 'DOUBLE',\n  // IFD offset, suggested by https://owl.phy.queensu.ca/~phil/exiftool/standards.html\n  0x000D: 'IFD',\n  // introduced by BigTIFF\n  0x0010: 'LONG8',\n  0x0011: 'SLONG8',\n  0x0012: 'IFD8',\n};\n\nexport const fieldTypes = {};\nfor (const key in fieldTypeNames) {\n  if (fieldTypeNames.hasOwnProperty(key)) {\n    fieldTypes[fieldTypeNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const photometricInterpretations = {\n  WhiteIsZero: 0,\n  BlackIsZero: 1,\n  RGB: 2,\n  Palette: 3,\n  TransparencyMask: 4,\n  CMYK: 5,\n  YCbCr: 6,\n\n  CIELab: 8,\n  ICCLab: 9,\n};\n\nexport const ExtraSamplesValues = {\n  Unspecified: 0,\n  Assocalpha: 1,\n  Unassalpha: 2,\n};\n\nexport const LercParameters = {\n  Version: 0,\n  AddCompression: 1,\n};\n\nexport const LercAddCompression = {\n  None: 0,\n  Deflate: 1,\n  Zstandard: 2,\n};\n\nexport const geoKeyNames = {\n  1024: 'GTModelTypeGeoKey',\n  1025: 'GTRasterTypeGeoKey',\n  1026: 'GTCitationGeoKey',\n  2048: 'GeographicTypeGeoKey',\n  2049: 'GeogCitationGeoKey',\n  2050: 'GeogGeodeticDatumGeoKey',\n  2051: 'GeogPrimeMeridianGeoKey',\n  2052: 'GeogLinearUnitsGeoKey',\n  2053: 'GeogLinearUnitSizeGeoKey',\n  2054: 'GeogAngularUnitsGeoKey',\n  2055: 'GeogAngularUnitSizeGeoKey',\n  2056: 'GeogEllipsoidGeoKey',\n  2057: 'GeogSemiMajorAxisGeoKey',\n  2058: 'GeogSemiMinorAxisGeoKey',\n  2059: 'GeogInvFlatteningGeoKey',\n  2060: 'GeogAzimuthUnitsGeoKey',\n  2061: 'GeogPrimeMeridianLongGeoKey',\n  2062: 'GeogTOWGS84GeoKey',\n  3072: 'ProjectedCSTypeGeoKey',\n  3073: 'PCSCitationGeoKey',\n  3074: 'ProjectionGeoKey',\n  3075: 'ProjCoordTransGeoKey',\n  3076: 'ProjLinearUnitsGeoKey',\n  3077: 'ProjLinearUnitSizeGeoKey',\n  3078: 'ProjStdParallel1GeoKey',\n  3079: 'ProjStdParallel2GeoKey',\n  3080: 'ProjNatOriginLongGeoKey',\n  3081: 'ProjNatOriginLatGeoKey',\n  3082: 'ProjFalseEastingGeoKey',\n  3083: 'ProjFalseNorthingGeoKey',\n  3084: 'ProjFalseOriginLongGeoKey',\n  3085: 'ProjFalseOriginLatGeoKey',\n  3086: 'ProjFalseOriginEastingGeoKey',\n  3087: 'ProjFalseOriginNorthingGeoKey',\n  3088: 'ProjCenterLongGeoKey',\n  3089: 'ProjCenterLatGeoKey',\n  3090: 'ProjCenterEastingGeoKey',\n  3091: 'ProjCenterNorthingGeoKey',\n  3092: 'ProjScaleAtNatOriginGeoKey',\n  3093: 'ProjScaleAtCenterGeoKey',\n  3094: 'ProjAzimuthAngleGeoKey',\n  3095: 'ProjStraightVertPoleLongGeoKey',\n  3096: 'ProjRectifiedGridAngleGeoKey',\n  4096: 'VerticalCSTypeGeoKey',\n  4097: 'VerticalCitationGeoKey',\n  4098: 'VerticalDatumGeoKey',\n  4099: 'VerticalUnitsGeoKey',\n};\n\nexport const geoKeys = {};\nfor (const key in geoKeyNames) {\n  if (geoKeyNames.hasOwnProperty(key)) {\n    geoKeys[geoKeyNames[key]] = parseInt(key, 10);\n  }\n}\n","const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw.js').then((m) => m.default));\naddDecoder(5, () => import('./lzw.js').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg.js').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate.js').then((m) => m.default));\naddDecoder(32773, () => import('./packbits.js').then((m) => m.default));\naddDecoder(34887, () => import('./lerc.js')\n  .then(async (m) => {\n    await m.zstd.init();\n    return m;\n  })\n  .then((m) => m.default),\n);\naddDecoder(50001, () => import('./webimage.js').then((m) => m.default));\n","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n","export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n","/*\n  Some parts of this file are based on UTIF.js,\n  which was released under the MIT License.\n  You can view that here:\n  https://github.com/photopea/UTIF.js/blob/master/LICENSE\n*/\nimport { fieldTagNames, fieldTagTypes, fieldTypeNames, geoKeyNames } from './globals.js';\nimport { assign, endsWith, forEach, invert, times } from './utils.js';\n\nconst tagName2Code = invert(fieldTagNames);\nconst geoKeyName2Code = invert(geoKeyNames);\nconst name2code = {};\nassign(name2code, tagName2Code);\nassign(name2code, geoKeyName2Code);\nconst typeName2byte = invert(fieldTypeNames);\n\n// config variables\nconst numBytesInIfd = 1000;\n\nconst _binBE = {\n  nextZero: (data, o) => {\n    let oincr = o;\n    while (data[oincr] !== 0) {\n      oincr++;\n    }\n    return oincr;\n  },\n  readUshort: (buff, p) => {\n    return (buff[p] << 8) | buff[p + 1];\n  },\n  readShort: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 1];\n    a[1] = buff[p + 0];\n    return _binBE.i16[0];\n  },\n  readInt: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.i32[0];\n  },\n  readUint: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.ui32[0];\n  },\n  readASCII: (buff, p, l) => {\n    return l.map((i) => String.fromCharCode(buff[p + i])).join('');\n  },\n  readFloat: (buff, p) => {\n    const a = _binBE.ui8;\n    times(4, (i) => {\n      a[i] = buff[p + 3 - i];\n    });\n    return _binBE.fl32[0];\n  },\n  readDouble: (buff, p) => {\n    const a = _binBE.ui8;\n    times(8, (i) => {\n      a[i] = buff[p + 7 - i];\n    });\n    return _binBE.fl64[0];\n  },\n  writeUshort: (buff, p, n) => {\n    buff[p] = (n >> 8) & 255;\n    buff[p + 1] = n & 255;\n  },\n  writeUint: (buff, p, n) => {\n    buff[p] = (n >> 24) & 255;\n    buff[p + 1] = (n >> 16) & 255;\n    buff[p + 2] = (n >> 8) & 255;\n    buff[p + 3] = (n >> 0) & 255;\n  },\n  writeASCII: (buff, p, s) => {\n    times(s.length, (i) => {\n      buff[p + i] = s.charCodeAt(i);\n    });\n  },\n  ui8: new Uint8Array(8),\n};\n\n_binBE.fl64 = new Float64Array(_binBE.ui8.buffer);\n\n_binBE.writeDouble = (buff, p, n) => {\n  _binBE.fl64[0] = n;\n  times(8, (i) => {\n    buff[p + i] = _binBE.ui8[7 - i];\n  });\n};\n\nconst _writeIFD = (bin, data, _offset, ifd) => {\n  let offset = _offset;\n\n  const keys = Object.keys(ifd).filter((key) => {\n    return key !== undefined && key !== null && key !== 'undefined';\n  });\n\n  bin.writeUshort(data, offset, keys.length);\n  offset += 2;\n\n  let eoff = offset + (12 * keys.length) + 4;\n\n  for (const key of keys) {\n    let tag = null;\n    if (typeof key === 'number') {\n      tag = key;\n    } else if (typeof key === 'string') {\n      tag = parseInt(key, 10);\n    }\n\n    const typeName = fieldTagTypes[tag];\n    const typeNum = typeName2byte[typeName];\n\n    if (typeName == null || typeName === undefined || typeof typeName === 'undefined') {\n      throw new Error(`unknown type of tag: ${tag}`);\n    }\n\n    let val = ifd[key];\n\n    if (val === undefined) {\n      throw new Error(`failed to get value for key ${key}`);\n    }\n\n    // ASCIIZ format with trailing 0 character\n    // http://www.fileformat.info/format/tiff/corion.htm\n    // https://stackoverflow.com/questions/7783044/whats-the-difference-between-asciiz-vs-ascii\n    if (typeName === 'ASCII' && typeof val === 'string' && endsWith(val, '\\u0000') === false) {\n      val += '\\u0000';\n    }\n\n    const num = val.length;\n\n    bin.writeUshort(data, offset, tag);\n    offset += 2;\n\n    bin.writeUshort(data, offset, typeNum);\n    offset += 2;\n\n    bin.writeUint(data, offset, num);\n    offset += 4;\n\n    let dlen = [-1, 1, 1, 2, 4, 8, 0, 0, 0, 0, 0, 0, 8][typeNum] * num;\n    let toff = offset;\n\n    if (dlen > 4) {\n      bin.writeUint(data, offset, eoff);\n      toff = eoff;\n    }\n\n    if (typeName === 'ASCII') {\n      bin.writeASCII(data, toff, val);\n    } else if (typeName === 'SHORT') {\n      times(num, (i) => {\n        bin.writeUshort(data, toff + (2 * i), val[i]);\n      });\n    } else if (typeName === 'LONG') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (4 * i), val[i]);\n      });\n    } else if (typeName === 'RATIONAL') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (8 * i), Math.round(val[i] * 10000));\n        bin.writeUint(data, toff + (8 * i) + 4, 10000);\n      });\n    } else if (typeName === 'DOUBLE') {\n      times(num, (i) => {\n        bin.writeDouble(data, toff + (8 * i), val[i]);\n      });\n    }\n\n    if (dlen > 4) {\n      dlen += (dlen & 1);\n      eoff += dlen;\n    }\n\n    offset += 4;\n  }\n\n  return [offset, eoff];\n};\n\nconst encodeIfds = (ifds) => {\n  const data = new Uint8Array(numBytesInIfd);\n  let offset = 4;\n  const bin = _binBE;\n\n  // set big-endian byte-order\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[0] = 77;\n  data[1] = 77;\n\n  // set format-version number\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[3] = 42;\n\n  let ifdo = 8;\n\n  bin.writeUint(data, offset, ifdo);\n\n  offset += 4;\n\n  ifds.forEach((ifd, i) => {\n    const noffs = _writeIFD(bin, data, ifdo, ifd);\n    ifdo = noffs[1];\n    if (i < ifds.length - 1) {\n      bin.writeUint(data, noffs[0], ifdo);\n    }\n  });\n\n  if (data.slice) {\n    return data.slice(0, ifdo).buffer;\n  }\n\n  // node hasn't implemented slice on Uint8Array yet\n  const result = new Uint8Array(ifdo);\n  for (let i = 0; i < ifdo; i++) {\n    result[i] = data[i];\n  }\n  return result.buffer;\n};\n\nconst encodeImage = (values, width, height, metadata) => {\n  if (height === undefined || height === null) {\n    throw new Error(`you passed into encodeImage a width of type ${height}`);\n  }\n\n  if (width === undefined || width === null) {\n    throw new Error(`you passed into encodeImage a width of type ${width}`);\n  }\n\n  const ifd = {\n    256: [width], // ImageWidth\n    257: [height], // ImageLength\n    273: [numBytesInIfd], // strips offset\n    278: [height], // RowsPerStrip\n    305: 'geotiff.js', // no array for ASCII(Z)\n  };\n\n  if (metadata) {\n    for (const i in metadata) {\n      if (metadata.hasOwnProperty(i)) {\n        ifd[i] = metadata[i];\n      }\n    }\n  }\n\n  const prfx = new Uint8Array(encodeIfds([ifd]));\n\n  const img = new Uint8Array(values);\n\n  const samplesPerPixel = ifd[277];\n\n  const data = new Uint8Array(numBytesInIfd + (width * height * samplesPerPixel));\n  times(prfx.length, (i) => {\n    data[i] = prfx[i];\n  });\n  forEach(img, (value, i) => {\n    data[numBytesInIfd + i] = value;\n  });\n\n  return data.buffer;\n};\n\nconst convertToTids = (input) => {\n  const result = {};\n  for (const key in input) {\n    if (key !== 'StripOffsets') {\n      if (!name2code[key]) {\n        console.error(key, 'not in name2code:', Object.keys(name2code));\n      }\n      result[name2code[key]] = input[key];\n    }\n  }\n  return result;\n};\n\nconst toArray = (input) => {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return [input];\n};\n\nconst metadataDefaults = [\n  ['Compression', 1], // no compression\n  ['PlanarConfiguration', 1],\n  ['ExtraSamples', 0],\n];\n\nexport function writeGeotiff(data, metadata) {\n  const isFlattened = typeof data[0] === 'number';\n\n  let height;\n  let numBands;\n  let width;\n  let flattenedValues;\n\n  if (isFlattened) {\n    height = metadata.height || metadata.ImageLength;\n    width = metadata.width || metadata.ImageWidth;\n    numBands = data.length / (height * width);\n    flattenedValues = data;\n  } else {\n    numBands = data.length;\n    height = data[0].length;\n    width = data[0][0].length;\n    flattenedValues = [];\n    times(height, (rowIndex) => {\n      times(width, (columnIndex) => {\n        times(numBands, (bandIndex) => {\n          flattenedValues.push(data[bandIndex][rowIndex][columnIndex]);\n        });\n      });\n    });\n  }\n\n  metadata.ImageLength = height;\n  delete metadata.height;\n  metadata.ImageWidth = width;\n  delete metadata.width;\n\n  // consult https://www.loc.gov/preservation/digital/formats/content/tiff_tags.shtml\n\n  if (!metadata.BitsPerSample) {\n    metadata.BitsPerSample = times(numBands, () => 8);\n  }\n\n  metadataDefaults.forEach((tag) => {\n    const key = tag[0];\n    if (!metadata[key]) {\n      const value = tag[1];\n      metadata[key] = value;\n    }\n  });\n\n  // The color space of the image data.\n  // 1=black is zero and 2=RGB.\n  if (!metadata.PhotometricInterpretation) {\n    metadata.PhotometricInterpretation = metadata.BitsPerSample.length === 3 ? 2 : 1;\n  }\n\n  // The number of components per pixel.\n  if (!metadata.SamplesPerPixel) {\n    metadata.SamplesPerPixel = [numBands];\n  }\n\n  if (!metadata.StripByteCounts) {\n    // we are only writing one strip\n    metadata.StripByteCounts = [numBands * height * width];\n  }\n\n  if (!metadata.ModelPixelScale) {\n    // assumes raster takes up exactly the whole globe\n    metadata.ModelPixelScale = [360 / width, 180 / height, 0];\n  }\n\n  if (!metadata.SampleFormat) {\n    metadata.SampleFormat = times(numBands, () => 1);\n  }\n\n  // if didn't pass in projection information, assume the popular 4326 \"geographic projection\"\n  if (!metadata.hasOwnProperty('GeographicTypeGeoKey') && !metadata.hasOwnProperty('ProjectedCSTypeGeoKey')) {\n    metadata.GeographicTypeGeoKey = 4326;\n    metadata.ModelTiepoint = [0, 0, 0, -180, 90, 0]; // raster fits whole globe\n    metadata.GeogCitationGeoKey = 'WGS 84';\n    metadata.GTModelTypeGeoKey = 2;\n  }\n\n  const geoKeys = Object.keys(metadata)\n    .filter((key) => endsWith(key, 'GeoKey'))\n    .sort((a, b) => name2code[a] - name2code[b]);\n\n  if (!metadata.GeoAsciiParams) {\n    let geoAsciiParams = '';\n    geoKeys.forEach((name) => {\n      const code = Number(name2code[name]);\n      const tagType = fieldTagTypes[code];\n      if (tagType === 'ASCII') {\n        geoAsciiParams += `${metadata[name].toString()}\\u0000`;\n      }\n    });\n    if (geoAsciiParams.length > 0) {\n      metadata.GeoAsciiParams = geoAsciiParams;\n    }\n  }\n\n  if (!metadata.GeoKeyDirectory) {\n    const NumberOfKeys = geoKeys.length;\n\n    const GeoKeyDirectory = [1, 1, 0, NumberOfKeys];\n    geoKeys.forEach((geoKey) => {\n      const KeyID = Number(name2code[geoKey]);\n      GeoKeyDirectory.push(KeyID);\n\n      let Count;\n      let TIFFTagLocation;\n      let valueOffset;\n      if (fieldTagTypes[KeyID] === 'SHORT') {\n        Count = 1;\n        TIFFTagLocation = 0;\n        valueOffset = metadata[geoKey];\n      } else if (geoKey === 'GeogCitationGeoKey') {\n        Count = metadata.GeoAsciiParams.length;\n        TIFFTagLocation = Number(name2code.GeoAsciiParams);\n        valueOffset = 0;\n      } else {\n        console.log(`[geotiff.js] couldn't get TIFFTagLocation for ${geoKey}`);\n      }\n      GeoKeyDirectory.push(TIFFTagLocation);\n      GeoKeyDirectory.push(Count);\n      GeoKeyDirectory.push(valueOffset);\n    });\n    metadata.GeoKeyDirectory = GeoKeyDirectory;\n  }\n\n  // delete GeoKeys from metadata, because stored in GeoKeyDirectory tag\n  for (const geoKey of geoKeys) {\n    if (metadata.hasOwnProperty(geoKey)) {\n      delete metadata[geoKey];\n    }\n  }\n\n  [\n    'Compression',\n    'ExtraSamples',\n    'GeographicTypeGeoKey',\n    'GTModelTypeGeoKey',\n    'GTRasterTypeGeoKey',\n    'ImageLength', // synonym of ImageHeight\n    'ImageWidth',\n    'Orientation',\n    'PhotometricInterpretation',\n    'ProjectedCSTypeGeoKey',\n    'PlanarConfiguration',\n    'ResolutionUnit',\n    'SamplesPerPixel',\n    'XPosition',\n    'YPosition',\n    'RowsPerStrip',\n  ].forEach((name) => {\n    if (metadata[name]) {\n      metadata[name] = toArray(metadata[name]);\n    }\n  });\n\n  const encodedMetadata = convertToTids(metadata);\n\n  const outputImage = encodeImage(flattenedValues, width, height, encodedMetadata);\n\n  return outputImage;\n}\n","function decodeRowAcc(row, stride) {\n  let length = row.length - stride;\n  let offset = 0;\n  do {\n    for (let i = stride; i > 0; i--) {\n      row[offset + stride] += row[offset];\n      offset++;\n    }\n\n    length -= stride;\n  } while (length > 0);\n}\n\nfunction decodeRowFloatingPoint(row, stride, bytesPerSample) {\n  let index = 0;\n  let count = row.length;\n  const wc = count / bytesPerSample;\n\n  while (count > stride) {\n    for (let i = stride; i > 0; --i) {\n      row[index + stride] += row[index];\n      ++index;\n    }\n    count -= stride;\n  }\n\n  const copy = row.slice();\n  for (let i = 0; i < wc; ++i) {\n    for (let b = 0; b < bytesPerSample; ++b) {\n      row[(bytesPerSample * i) + b] = copy[((bytesPerSample - b - 1) * wc) + i];\n    }\n  }\n}\n\nexport function applyPredictor(block, predictor, width, height, bitsPerSample,\n  planarConfiguration) {\n  if (!predictor || predictor === 1) {\n    return block;\n  }\n\n  for (let i = 0; i < bitsPerSample.length; ++i) {\n    if (bitsPerSample[i] % 8 !== 0) {\n      throw new Error('When decoding with predictor, only multiple of 8 bits are supported.');\n    }\n    if (bitsPerSample[i] !== bitsPerSample[0]) {\n      throw new Error('When decoding with predictor, all samples must have the same size.');\n    }\n  }\n\n  const bytesPerSample = bitsPerSample[0] / 8;\n  const stride = planarConfiguration === 2 ? 1 : bitsPerSample.length;\n\n  for (let i = 0; i < height; ++i) {\n    // Last strip will be truncated if height % stripHeight != 0\n    if (i * stride * width * bytesPerSample >= block.byteLength) {\n      break;\n    }\n    let row;\n    if (predictor === 2) { // horizontal prediction\n      switch (bitsPerSample[0]) {\n        case 8:\n          row = new Uint8Array(\n            block, i * stride * width * bytesPerSample, stride * width * bytesPerSample,\n          );\n          break;\n        case 16:\n          row = new Uint16Array(\n            block, i * stride * width * bytesPerSample, stride * width * bytesPerSample / 2,\n          );\n          break;\n        case 32:\n          row = new Uint32Array(\n            block, i * stride * width * bytesPerSample, stride * width * bytesPerSample / 4,\n          );\n          break;\n        default:\n          throw new Error(`Predictor 2 not allowed with ${bitsPerSample[0]} bits per sample.`);\n      }\n      decodeRowAcc(row, stride, bytesPerSample);\n    } else if (predictor === 3) { // horizontal floating point\n      row = new Uint8Array(\n        block, i * stride * width * bytesPerSample, stride * width * bytesPerSample,\n      );\n      decodeRowFloatingPoint(row, stride, bytesPerSample);\n    }\n  }\n  return block;\n}\n","import { applyPredictor } from '../predictor.js';\n\nexport default class BaseDecoder {\n  async decode(fileDirectory, buffer) {\n    const decoded = await this.decodeBlock(buffer);\n    const predictor = fileDirectory.Predictor || 1;\n    if (predictor !== 1) {\n      const isTiled = !fileDirectory.StripOffsets;\n      const tileWidth = isTiled ? fileDirectory.TileWidth : fileDirectory.ImageWidth;\n      const tileHeight = isTiled ? fileDirectory.TileLength : (\n        fileDirectory.RowsPerStrip || fileDirectory.ImageLength\n      );\n      return applyPredictor(\n        decoded, predictor, tileWidth, tileHeight, fileDirectory.BitsPerSample,\n        fileDirectory.PlanarConfiguration,\n      );\n    }\n    return decoded;\n  }\n}\n","/** @module geotiff */\nimport GeoTIFFImage from './geotiffimage.js';\nimport DataView64 from './dataview64.js';\nimport DataSlice from './dataslice.js';\nimport Pool from './pool.js';\n\nimport { makeRemoteSource, makeCustomSource } from './source/remote.js';\nimport { makeBufferSource } from './source/arraybuffer.js';\nimport { makeFileReaderSource } from './source/filereader.js';\nimport { makeFileSource } from './source/file.js';\nimport { BaseClient, BaseResponse } from './source/client/base.js';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals.js';\nimport { writeGeotiff } from './geotiffwriter.js';\nimport * as globals from './globals.js';\nimport * as rgb from './rgb.js';\nimport { getDecoder, addDecoder } from './compression/index.js';\nimport { setLogger } from './logging.js';\n\nexport { globals };\nexport { rgb };\nexport { default as BaseDecoder } from './compression/basedecoder.js';\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\n/**\n * @typedef {Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array}\n * TypedArray\n */\n\n/**\n * @typedef {{ height:number, width: number }} Dimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray & { height: number; width: number}`\n * @typedef {TypedArray & Dimensions} TypedArrayWithDimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray[] & { height: number; width: number}`\n * @typedef {TypedArray[] & Dimensions} TypedArrayArrayWithDimensions\n */\n\n/**\n *  The autogenerated docs are a little confusing here. The effective type is:\n *\n * `(TypedArray | TypedArray[]) & { height: number; width: number}`\n * @typedef {TypedArrayWithDimensions | TypedArrayArrayWithDimensions} ReadRasterResult\n */\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {import('./geotiffimage').ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded array(s), with `height` and `width`, as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * @typedef {Object} GeoTIFFOptions\n * @property {boolean} [cache=false] whether or not decoded tiles shall be cached.\n */\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {*} source The datasource to read from.\n   * @param {boolean} littleEndian Whether the image uses little endian.\n   * @param {boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {GeoTIFFOptions} [options] further options.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {Promise<ImageFileDirectory>} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Promise<Object>} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {*} source The source of data to parse from.\n   * @param {GeoTIFFOptions} [options] Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Creates a new GeoTIFF from a custom {@link BaseClient}.\n * @param {BaseClient} client The client.\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromCustomClient(client, options = {}, signal) {\n  return GeoTIFF.fromSource(makeCustomSource(client, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {Object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\nexport { GeoTIFFImage };\nexport { BaseClient, BaseResponse };\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ)\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  StringType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[\n        GET_BAND_VALUE_FUNC\n      ] = `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Concat\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator\n        )}`\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value)\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType\n    )})`\n  );\n}\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","import {Map, View, Overlay, Feature} from 'ol';\n\nimport {fromLonLat} from 'ol/proj';\nimport {Point} from 'ol/geom';\nimport {Style, Icon, Circle, Fill, Stroke, Text} from 'ol/style';\nimport {Vector as sourceVector, Cluster, OSM} from 'ol/source';\nimport {asArray} from 'ol/color';\nimport {Vector as LayerVector, Tile} from 'ol/layer';\nimport {defaults as controlDefaults} from 'ol/control/defaults';\nimport {FullScreen} from 'ol/control';\nimport {defaults as interactionDefaults} from 'ol/interaction/defaults';\nimport {getVectorContext} from 'ol/render';\nimport {fromExtent} from 'ol/geom/Polygon';\nimport {createEmpty, extend, getWidth, getHeight} from 'ol/extent';\n\n (function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n   typeof define === 'function' && define.amd ? define(factory) :\n   (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.VenoMaps = factory());\n}(self, (function () { 'use strict';\n\n    var VenoMapsPlugin = (function(){\n\n        function initVenoMaps(mapblock){\n            \n            var infomap =  JSON.parse(mapblock.dataset.infomap);\n\n            // var infomap = JSON.parse(getinfomap);\n            var map, mapid, maplat, maplon, zoom, zoom_scroll, styleUrl, attribution, getsource, cluster_color, cluster_bg;\n\n            mapid = infomap.mapid;\n            maplat = infomap.lat;\n            maplon = infomap.lon;\n            styleUrl =  decodeURIComponent(infomap.style_url);\n\n            zoom = infomap.zoom;\n            zoom_scroll = infomap.zoom_scroll;\n            cluster_color = infomap.cluster_color;\n            cluster_bg = infomap.cluster_bg;\n\n            zoom_scroll = Boolean(infomap.zoom_scroll);\n\n            const wrapoverlay = mapblock.querySelector('#wrap-overlay-' + mapid );\n\n            const allclosepanel = wrapoverlay.querySelectorAll(\".wpol-infopanel-close\");\n            const allpanels = wrapoverlay.querySelectorAll(\".wpol-infopanel\");\n            const attributionel = wrapoverlay.querySelector(\".venomaps-get-attribution\");\n            attribution = attributionel ? attributionel.innerHTML : '';\n\n            var pos = fromLonLat([parseFloat(maplon), parseFloat(maplat)]);\n\n            const setupdata = new Array();\n            let features = new Array();\n            let source, clusterSource;\n\n            function setUpMarkers() {\n                const allinfomarkers = wrapoverlay.querySelectorAll(\".wpol-infomarker\");\n\n                // Setup markers\n                allinfomarkers.forEach(function(infomarkerdom, key) {\n\n                    const datamarker = JSON.parse(infomarkerdom.dataset.marker);\n                    const markerpos = fromLonLat([parseFloat(datamarker.lon), parseFloat(datamarker.lat)]);\n                    const markerint = parseFloat(datamarker.size);\n                    const markeroffset = (markerint * -1) / 2;\n                    const labeloffset = (markerint + 12) * -1;\n                    const markerimage = infomarkerdom.querySelector('img');\n\n                    if (infomarkerdom) {\n\n                        var labelDom = document.getElementById('infopanel_' + mapid + '_' + key);\n                        var infolabel = false;\n                        var labeltext = false;\n                        \n                        if (labelDom) {\n                            var infolabelDom = labelDom.querySelector('.wpol-infolabel');\n                            labeltext = infolabelDom ? infolabelDom.innerText : false;\n\n                            // Add infoPanel\n                            infolabel = new Overlay({\n                              position: markerpos,\n                              positioning: 'bottom-center',\n                              offset: [0, labeloffset],\n                              element: labelDom,\n                              // stopEvent: true,\n                            });\n                        }\n\n                        setupdata[key] = {};\n                        setupdata[key].label = infolabel;\n\n                        setupdata[key].text = labeltext;\n\n                        let feature = new Feature(new Point(markerpos));\n                        setupdata[key].key = key;\n\n                        var style = new Style({\n                            image: new Icon({\n                                src: markerimage.src,\n                                height: markerint,\n                                displacement: [0, -markeroffset],\n                                crossOrigin: \"anonymous\"\n                            })\n                        });\n\n                        features[key] = feature;\n\n                        feature.set('stile', style);\n                        feature.set('panel', labelDom);\n                        feature.set('visible', true);\n                        \n                        allclosepanel.forEach(thisclosepanel => {\n                            thisclosepanel.addEventListener('click', function(){\n                                var infobox = thisclosepanel.parentNode;\n                                if (!infobox.classList.contains('infobox-closed')) {\n                                    infobox.classList.add('infobox-closed');\n                                    infobox.classList.remove('was-open');\n                                }\n                            });\n                        });\n                    }\n                }); // END SETUP MARKERS\n            }\n\n            function setUp() {\n                setUpMarkers();\n                loadMap();\n            }\n\n            function closepanels(thispanel = false){\n                if (thispanel) {\n                    if (!thispanel.classList.contains('infobox-closed')) {\n                        thispanel.classList.add('was-open', 'infobox-closed');\n                    }\n                }\n            }\n\n            function openpanels(thispanel = false){\n                if (thispanel) {\n                    if (thispanel.classList.contains('was-open')) {\n                        thispanel.classList.remove('infobox-closed');\n                    }\n                }\n            }\n\n            function setupClusters(){\n                // Setup clusters\n                source = new sourceVector({\n                    features: features,\n                });\n\n                const mindistance = 20;\n                const distanceinput = 40;\n\n                clusterSource = new Cluster({\n                    distance: parseInt(distanceinput, 10),\n                    minDistance: parseInt(mindistance, 10),\n                    source: source,\n                    geometryFunction: (feature) => {\n                        closepanels(feature.get('panel'));\n                        if (feature.get('visible')) {\n                            return feature.getGeometry();\n                        }\n                    },\n                });\n                \n                // Get rgba color\n                var cluster_bg_array = asArray(cluster_bg).slice();\n                cluster_bg_array[3] = 0.3;\n\n                const clusters = new LayerVector({\n                    source: clusterSource,\n                    style: function(feature) {\n                        const size = feature.get('features').length;\n\n                        const clusterstyle = [\n                            new Style({\n                                image: new Circle({\n                                    radius: 27,\n                                    fill: new Fill({\n                                        color: cluster_bg_array,\n                                    }),\n                                })\n                            }),\n                            new Style({\n                                image: new Circle({\n                                    radius: 20,\n                                    stroke: new Stroke({\n                                        color: cluster_color,\n                                    }),\n                                    fill: new Fill({\n                                        color: cluster_bg,\n                                    }),\n                                }),\n                                text: new Text({\n                                    text: size.toString(),\n                                    fill: new Fill({\n                                        color: cluster_color,\n                                    }),\n                                    font: \"12px sans-serif\"\n                                }),\n                                zIndex: 9999\n                            })\n                        ];\n\n                        var style = false;\n                        if (size > 1) {\n                            style = clusterstyle;\n                            feature.get('features').forEach(feature => {\n                                closepanels(feature.get('panel'));\n                            });\n                        } else {\n                            const originalFeature = feature.get('features')[0];\n                            openpanels(originalFeature.get('panel'));\n                            style = originalFeature.get('stile');\n                        }\n\n                        return style;\n                    }\n                });\n                return clusters;\n            }\n            // END SETUP Clusters\n\n\n\n            function updateSearch(term) {\n                if (setupdata) {\n                    setupdata.forEach(marker => {\n                        if (term.length > 1 ) {\n                            if (marker.text) {\n                                if (marker.text.toLowerCase().includes(term.toLowerCase())) {\n                                    // Found marker\n                                    features[marker.key].set('visible', true);\n                                } else {\n                                    features[marker.key].set('visible', false);\n                                }\n                            } else {\n                                // Hide markers without text\n                                features[marker.key].set('visible', false);\n                            }\n                        } else {\n                            // Reset search\n                            features[marker.key].set('visible', true);\n                        }\n                    });\n                }\n\n                if (setupdata && term.length > 1) { \n                    // Zoom out to show all the markers\n                    map.getView().fit(source.getExtent(), {duration: 500, padding: [100, 100, 100, 100]});\n                }  \n            }\n\n            function loadMap() {\n                const clusters = setupClusters();\n                let sourcesettings = {};\n                if ( styleUrl !== 'default' ) {\n                    sourcesettings.url = styleUrl;\n                    if ( attribution ) {\n                        sourcesettings.attributions = attribution;\n                    }\n                }\n\n                getsource = new OSM(sourcesettings);\n\n                var baselayer = new Tile({\n                    source: getsource\n                });\n\n                map = new Map({\n                    target: 'venomaps_' + mapid,\n                    view: new View({\n                        center: pos,\n                        zoom: zoom,\n                        maxZoom: 22,\n                        minZoom: 1,\n                    }),\n                    layers: [\n                        baselayer,\n                        clusters\n                    ],\n                    controls: controlDefaults({ attributionOptions: { collapsible: true } }).extend([new FullScreen()]),\n                    interactions: interactionDefaults({mouseWheelZoom:zoom_scroll})\n                });\n\n                baselayer.on(\"postrender\", function (event) {\n                  var vectorContext = getVectorContext(event);\n                  vectorContext.setStyle(\n                    new Style({\n                      fill: new Fill({\n                        color: \"rgba(100, 100, 100, 0.2)\"\n                      })\n                    })\n                  );\n                  var polygon = fromExtent(map.getView().getProjection().getExtent());\n                  vectorContext.drawGeometry(polygon);\n                });\n\n                setupdata.forEach(marker => {\n                    if (marker.label) {\n                        map.addOverlay(marker.label);\n                    }\n                });\n\n                var searchmap = document.getElementById(\"search-venomap-\"+mapid);\n                if (searchmap) {\n                    searchmap.value = \"\";\n                    searchmap.addEventListener(\"input\", function(){\n                        if (searchterms) {\n                            searchterms.value = \"\";\n                        }\n                        updateSearch(searchmap.value);\n                    });                    \n                }\n\n                var searchterms = document.getElementById(\"search-venomap-term-\"+mapid);\n                if (searchterms) {\n                    searchterms.value = \"\";\n                    searchterms.addEventListener(\"change\", function(){\n                        if (searchmap) {\n                            searchmap.value = \"\";\n                        }\n                        updateSearch(searchterms.value);\n                    });                    \n                }\n\n                map.on('click', (event) => {\n                    clusters.getFeatures(event.pixel).then((features) => {\n                        if (features.length > 0) {\n                            const clusterMembers = features[0].get('features');\n                                const view = map.getView();\n                                if (clusterMembers.length > 1) {\n                                    // Calculate the extent of the cluster members.\n                                    const extent = createEmpty();\n                                    clusterMembers.forEach((feature) => extend(extent, feature.getGeometry().getExtent()));\n                                    \n                                    const resolution = map.getView().getResolution();\n\n                                    if ( view.getZoom() !== view.getMaxZoom() && (getWidth(extent) > resolution || getHeight(extent) > resolution)) {\n                                        view.fit(extent, {duration: 500, padding: [100, 100, 100, 100]});\n                                    }\n                                }\n                                if (clusterMembers.length === 1) { {\n                                    var allinfopanels = document.querySelectorAll('.wpol-infopanel');\n                                    var alloverlays = document.querySelectorAll('.ol-overlay-container');\n                                    var paneltarget = clusterMembers[0].get('panel');\n                                    if (paneltarget) {\n                                        alloverlays.forEach(thisoverlay => {\n                                            thisoverlay.classList.remove('wpol-infopanel-active');\n                                        });\n                                        paneltarget.parentNode.classList.add('wpol-infopanel-active');\n                                        paneltarget.classList.remove('infobox-closed', 'was-open');\n                                        // Center map to marker\n                                        const point = clusterMembers[0].getGeometry();\n                                        view.animate({center: point.getCoordinates()});\n                                    }\n                                }\n                            }\n                        }\n                    });\n                });\n\n                // change mouse cursor when over marker\n                map.on('pointermove', function (e) {\n                    const pixel = map.getEventPixel(e.originalEvent);\n                    const pixelFeatures = map.getFeaturesAtPixel(pixel);\n                    const features = pixelFeatures.length > 0 ? pixelFeatures[0].get('features') : false;\n                    const hit = map.hasFeatureAtPixel(pixel) && (features.length > 1 || (features.length === 1 && features[0].get('panel')));\n                    map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n                });\n            }\n\n            setUp(); \n        }\n\n        function init(){\n\n            // Init Maps\n            var allmaps = document.querySelectorAll('.wrap-venomaps');\n            allmaps.forEach(thismap => {\n                if (!thismap.hasAttribute(\"data-venomap-init\")) {\n                    thismap.setAttribute(\"data-venomap-init\", \"1\");\n                    initVenoMaps(thismap);\n                }\n\n            });\n        }\n\n        return {\n            init\n        };\n    }());\n\n    function VenoMaps(){\n        return VenoMapsPlugin.init();\n    }\n    return VenoMaps;\n})));\n\nVenoMaps();\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","import BaseDecoder from './basedecoder.js';\n\nexport default class RawDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    return buffer;\n  }\n}\n","import BaseDecoder from './basedecoder.js';\n\nconst MIN_BITS = 9;\nconst CLEAR_CODE = 256; // clear code\nconst EOI_CODE = 257; // end of information\nconst MAX_BYTELENGTH = 12;\n\nfunction getByte(array, position, length) {\n  const d = position % 8;\n  const a = Math.floor(position / 8);\n  const de = 8 - d;\n  const ef = (position + length) - ((a + 1) * 8);\n  let fg = (8 * (a + 2)) - (position + length);\n  const dg = ((a + 2) * 8) - position;\n  fg = Math.max(0, fg);\n  if (a >= array.length) {\n    console.warn('ran off the end of the buffer before finding EOI_CODE (end on input code)');\n    return EOI_CODE;\n  }\n  let chunk1 = array[a] & ((2 ** (8 - d)) - 1);\n  chunk1 <<= (length - de);\n  let chunks = chunk1;\n  if (a + 1 < array.length) {\n    let chunk2 = array[a + 1] >>> fg;\n    chunk2 <<= Math.max(0, (length - dg));\n    chunks += chunk2;\n  }\n  if (ef > 8 && a + 2 < array.length) {\n    const hi = ((a + 3) * 8) - (position + length);\n    const chunk3 = array[a + 2] >>> hi;\n    chunks += chunk3;\n  }\n  return chunks;\n}\n\nfunction appendReversed(dest, source) {\n  for (let i = source.length - 1; i >= 0; i--) {\n    dest.push(source[i]);\n  }\n  return dest;\n}\n\nfunction decompress(input) {\n  const dictionaryIndex = new Uint16Array(4093);\n  const dictionaryChar = new Uint8Array(4093);\n  for (let i = 0; i <= 257; i++) {\n    dictionaryIndex[i] = 4096;\n    dictionaryChar[i] = i;\n  }\n  let dictionaryLength = 258;\n  let byteLength = MIN_BITS;\n  let position = 0;\n\n  function initDictionary() {\n    dictionaryLength = 258;\n    byteLength = MIN_BITS;\n  }\n  function getNext(array) {\n    const byte = getByte(array, position, byteLength);\n    position += byteLength;\n    return byte;\n  }\n  function addToDictionary(i, c) {\n    dictionaryChar[dictionaryLength] = c;\n    dictionaryIndex[dictionaryLength] = i;\n    dictionaryLength++;\n    return dictionaryLength - 1;\n  }\n  function getDictionaryReversed(n) {\n    const rev = [];\n    for (let i = n; i !== 4096; i = dictionaryIndex[i]) {\n      rev.push(dictionaryChar[i]);\n    }\n    return rev;\n  }\n\n  const result = [];\n  initDictionary();\n  const array = new Uint8Array(input);\n  let code = getNext(array);\n  let oldCode;\n  while (code !== EOI_CODE) {\n    if (code === CLEAR_CODE) {\n      initDictionary();\n      code = getNext(array);\n      while (code === CLEAR_CODE) {\n        code = getNext(array);\n      }\n\n      if (code === EOI_CODE) {\n        break;\n      } else if (code > CLEAR_CODE) {\n        throw new Error(`corrupted code at scanline ${code}`);\n      } else {\n        const val = getDictionaryReversed(code);\n        appendReversed(result, val);\n        oldCode = code;\n      }\n    } else if (code < dictionaryLength) {\n      const val = getDictionaryReversed(code);\n      appendReversed(result, val);\n      addToDictionary(oldCode, val[val.length - 1]);\n      oldCode = code;\n    } else {\n      const oldVal = getDictionaryReversed(oldCode);\n      if (!oldVal) {\n        throw new Error(`Bogus entry. Not in dictionary, ${oldCode} / ${dictionaryLength}, position: ${position}`);\n      }\n      appendReversed(result, oldVal);\n      result.push(oldVal[oldVal.length - 1]);\n      addToDictionary(oldCode, oldVal[oldVal.length - 1]);\n      oldCode = code;\n    }\n\n    if (dictionaryLength + 1 >= (2 ** byteLength)) {\n      if (byteLength === MAX_BYTELENGTH) {\n        oldCode = undefined;\n      } else {\n        byteLength++;\n      }\n    }\n    code = getNext(array);\n  }\n  return new Uint8Array(result);\n}\n\nexport default class LZWDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    return decompress(buffer, false).buffer;\n  }\n}\n","import BaseDecoder from './basedecoder.js';\n\n/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nconst dctZigZag = new Int32Array([\n  0,\n  1, 8,\n  16, 9, 2,\n  3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n  5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13, 6,\n  7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63,\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896;// sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0;\n  const code = [];\n  let length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    --length;\n  }\n  code.push({ children: [], index: 0 });\n\n  let p = code[0];\n  let q;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push(q = { children: [], index: 0 });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push(q = { children: [], index: 0 });\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction decodeScan(data, initialOffset,\n  frame, components, resetInterval,\n  spectralStart, spectralEnd,\n  successivePrev, successive) {\n  const { mcusPerLine, progressive } = frame;\n\n  const startOffset = initialOffset;\n  let offset = initialOffset;\n  let bitsData = 0;\n  let bitsCount = 0;\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xFF) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        throw new Error(`unexpected marker: ${((bitsData << 8) | nextByte).toString(16)}`);\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n  function decodeHuffman(tree) {\n    let node = tree;\n    let bit;\n    while ((bit = readBit()) !== null) { // eslint-disable-line no-cond-assign\n      node = node[bit];\n      if (typeof node === 'number') {\n        return node;\n      }\n      if (typeof node !== 'object') {\n        throw new Error('invalid huffman sequence');\n      }\n    }\n    return null;\n  }\n  function receive(initialLength) {\n    let length = initialLength;\n    let n = 0;\n    while (length > 0) {\n      const bit = readBit();\n      if (bit === null) {\n        return undefined;\n      }\n      n = (n << 1) | bit;\n      --length;\n    }\n    return n;\n  }\n  function receiveAndExtend(length) {\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n  function decodeBaseline(component, zz) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.pred += diff;\n    zz[0] = component.pred;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15;\n      const r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n      } else {\n        k += r;\n        const z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n  }\n  function decodeDCFirst(component, zz) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n    component.pred += diff;\n    zz[0] = component.pred;\n  }\n  function decodeDCSuccessive(component, zz) {\n    zz[0] |= readBit() << successive;\n  }\n  let eobrun = 0;\n  function decodeACFirst(component, zz) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15;\n      const r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n      } else {\n        k += r;\n        const z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n  }\n  let successiveACState = 0;\n  let successiveACNextValue;\n  function decodeACSuccessive(component, zz) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    while (k <= e) {\n      const z = dctZigZag[k];\n      const direction = zz[z] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: { // initial state\n          const rs = decodeHuffman(component.huffmanTableAC);\n          const s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new Error('invalid ACn encoding');\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue; // eslint-disable-line no-continue\n        }\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          }\n          break;\n        default:\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n  function decodeMcu(component, decodeFunction, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    const blockRow = (mcuRow * component.v) + row;\n    const blockCol = (mcuCol * component.h) + col;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n  function decodeBlock(component, decodeFunction, mcu) {\n    const blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n\n  const componentsLength = components.length;\n  let component;\n  let i;\n  let j;\n  let k;\n  let n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0;\n  let marker;\n  let mcuExpected;\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  const usedResetInterval = resetInterval || mcuExpected;\n\n  while (mcu < mcuExpected) {\n    // reset interval stuff\n    for (i = 0; i < componentsLength; i++) {\n      components[i].pred = 0;\n    }\n    eobrun = 0;\n\n    if (componentsLength === 1) {\n      component = components[0];\n      for (n = 0; n < usedResetInterval; n++) {\n        decodeBlock(component, decodeFn, mcu);\n        mcu++;\n      }\n    } else {\n      for (n = 0; n < usedResetInterval; n++) {\n        for (i = 0; i < componentsLength; i++) {\n          component = components[i];\n          const { h, v } = component;\n          for (j = 0; j < v; j++) {\n            for (k = 0; k < h; k++) {\n              decodeMcu(component, decodeFn, mcu, j, k);\n            }\n          }\n        }\n        mcu++;\n\n        // If we've reached our expected MCU's, stop decoding\n        if (mcu === mcuExpected) {\n          break;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    marker = (data[offset] << 8) | data[offset + 1];\n    if (marker < 0xFF00) {\n      throw new Error('marker was not found');\n    }\n\n    if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\nfunction buildComponentData(frame, component) {\n  const lines = [];\n  const { blocksPerLine, blocksPerColumn } = component;\n  const samplesPerLine = blocksPerLine << 3;\n  const R = new Int32Array(64);\n  const r = new Uint8Array(64);\n\n  // A port of poppler's IDCT method which in turn is taken from:\n  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n  //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n  //   988-991.\n  function quantizeAndInverse(zz, dataOut, dataIn) {\n    const qt = component.quantizationTable;\n    let v0;\n    let v1;\n    let v2;\n    let v3;\n    let v4;\n    let v5;\n    let v6;\n    let v7;\n    let t;\n    const p = dataIn;\n    let i;\n\n    // dequant\n    for (i = 0; i < 64; i++) {\n      p[i] = zz[i] * qt[i];\n    }\n\n    // inverse DCT on rows\n    for (i = 0; i < 8; ++i) {\n      const row = 8 * i;\n\n      // check for all-zero AC coefficients\n      if (p[1 + row] === 0 && p[2 + row] === 0 && p[3 + row] === 0\n        && p[4 + row] === 0 && p[5 + row] === 0 && p[6 + row] === 0\n        && p[7 + row] === 0) {\n        t = ((dctSqrt2 * p[0 + row]) + 512) >> 10;\n        p[0 + row] = t;\n        p[1 + row] = t;\n        p[2 + row] = t;\n        p[3 + row] = t;\n        p[4 + row] = t;\n        p[5 + row] = t;\n        p[6 + row] = t;\n        p[7 + row] = t;\n        continue; // eslint-disable-line no-continue\n      }\n\n      // stage 4\n      v0 = ((dctSqrt2 * p[0 + row]) + 128) >> 8;\n      v1 = ((dctSqrt2 * p[4 + row]) + 128) >> 8;\n      v2 = p[2 + row];\n      v3 = p[6 + row];\n      v4 = ((dctSqrt1d2 * (p[1 + row] - p[7 + row])) + 128) >> 8;\n      v7 = ((dctSqrt1d2 * (p[1 + row] + p[7 + row])) + 128) >> 8;\n      v5 = p[3 + row] << 4;\n      v6 = p[5 + row] << 4;\n\n      // stage 3\n      t = (v0 - v1 + 1) >> 1;\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = t;\n      t = ((v2 * dctSin6) + (v3 * dctCos6) + 128) >> 8;\n      v2 = ((v2 * dctCos6) - (v3 * dctSin6) + 128) >> 8;\n      v3 = t;\n      t = (v4 - v6 + 1) >> 1;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = t;\n      t = (v7 + v5 + 1) >> 1;\n      v5 = (v7 - v5 + 1) >> 1;\n      v7 = t;\n\n      // stage 2\n      t = (v0 - v3 + 1) >> 1;\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = t;\n      t = (v1 - v2 + 1) >> 1;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = t;\n      t = ((v4 * dctSin3) + (v7 * dctCos3) + 2048) >> 12;\n      v4 = ((v4 * dctCos3) - (v7 * dctSin3) + 2048) >> 12;\n      v7 = t;\n      t = ((v5 * dctSin1) + (v6 * dctCos1) + 2048) >> 12;\n      v5 = ((v5 * dctCos1) - (v6 * dctSin1) + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[0 + row] = v0 + v7;\n      p[7 + row] = v0 - v7;\n      p[1 + row] = v1 + v6;\n      p[6 + row] = v1 - v6;\n      p[2 + row] = v2 + v5;\n      p[5 + row] = v2 - v5;\n      p[3 + row] = v3 + v4;\n      p[4 + row] = v3 - v4;\n    }\n\n    // inverse DCT on columns\n    for (i = 0; i < 8; ++i) {\n      const col = i;\n\n      // check for all-zero AC coefficients\n      if (p[(1 * 8) + col] === 0 && p[(2 * 8) + col] === 0 && p[(3 * 8) + col] === 0\n        && p[(4 * 8) + col] === 0 && p[(5 * 8) + col] === 0 && p[(6 * 8) + col] === 0\n        && p[(7 * 8) + col] === 0) {\n        t = ((dctSqrt2 * dataIn[i + 0]) + 8192) >> 14;\n        p[(0 * 8) + col] = t;\n        p[(1 * 8) + col] = t;\n        p[(2 * 8) + col] = t;\n        p[(3 * 8) + col] = t;\n        p[(4 * 8) + col] = t;\n        p[(5 * 8) + col] = t;\n        p[(6 * 8) + col] = t;\n        p[(7 * 8) + col] = t;\n        continue; // eslint-disable-line no-continue\n      }\n\n      // stage 4\n      v0 = ((dctSqrt2 * p[(0 * 8) + col]) + 2048) >> 12;\n      v1 = ((dctSqrt2 * p[(4 * 8) + col]) + 2048) >> 12;\n      v2 = p[(2 * 8) + col];\n      v3 = p[(6 * 8) + col];\n      v4 = ((dctSqrt1d2 * (p[(1 * 8) + col] - p[(7 * 8) + col])) + 2048) >> 12;\n      v7 = ((dctSqrt1d2 * (p[(1 * 8) + col] + p[(7 * 8) + col])) + 2048) >> 12;\n      v5 = p[(3 * 8) + col];\n      v6 = p[(5 * 8) + col];\n\n      // stage 3\n      t = (v0 - v1 + 1) >> 1;\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = t;\n      t = ((v2 * dctSin6) + (v3 * dctCos6) + 2048) >> 12;\n      v2 = ((v2 * dctCos6) - (v3 * dctSin6) + 2048) >> 12;\n      v3 = t;\n      t = (v4 - v6 + 1) >> 1;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = t;\n      t = (v7 + v5 + 1) >> 1;\n      v5 = (v7 - v5 + 1) >> 1;\n      v7 = t;\n\n      // stage 2\n      t = (v0 - v3 + 1) >> 1;\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = t;\n      t = (v1 - v2 + 1) >> 1;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = t;\n      t = ((v4 * dctSin3) + (v7 * dctCos3) + 2048) >> 12;\n      v4 = ((v4 * dctCos3) - (v7 * dctSin3) + 2048) >> 12;\n      v7 = t;\n      t = ((v5 * dctSin1) + (v6 * dctCos1) + 2048) >> 12;\n      v5 = ((v5 * dctCos1) - (v6 * dctSin1) + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[(0 * 8) + col] = v0 + v7;\n      p[(7 * 8) + col] = v0 - v7;\n      p[(1 * 8) + col] = v1 + v6;\n      p[(6 * 8) + col] = v1 - v6;\n      p[(2 * 8) + col] = v2 + v5;\n      p[(5 * 8) + col] = v2 - v5;\n      p[(3 * 8) + col] = v3 + v4;\n      p[(4 * 8) + col] = v3 - v4;\n    }\n\n    // convert to 8-bit integers\n    for (i = 0; i < 64; ++i) {\n      const sample = 128 + ((p[i] + 8) >> 4);\n      if (sample < 0) {\n        dataOut[i] = 0;\n      } else if (sample > 0XFF) {\n        dataOut[i] = 0xFF;\n      } else {\n        dataOut[i] = sample;\n      }\n    }\n  }\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    const scanLine = blockRow << 3;\n    for (let i = 0; i < 8; i++) {\n      lines.push(new Uint8Array(samplesPerLine));\n    }\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n      let offset = 0;\n      const sample = blockCol << 3;\n      for (let j = 0; j < 8; j++) {\n        const line = lines[scanLine + j];\n        for (let i = 0; i < 8; i++) {\n          line[sample + i] = r[offset++];\n        }\n      }\n    }\n  }\n  return lines;\n}\n\nclass JpegStreamReader {\n  constructor() {\n    this.jfif = null;\n    this.adobe = null;\n\n    this.quantizationTables = [];\n    this.huffmanTablesAC = [];\n    this.huffmanTablesDC = [];\n    this.resetFrames();\n  }\n\n  resetFrames() {\n    this.frames = [];\n  }\n\n  parse(data) {\n    let offset = 0;\n    // const { length } = data;\n    function readUint16() {\n      const value = (data[offset] << 8) | data[offset + 1];\n      offset += 2;\n      return value;\n    }\n    function readDataBlock() {\n      const length = readUint16();\n      const array = data.subarray(offset, offset + length - 2);\n      offset += array.length;\n      return array;\n    }\n    function prepareComponents(frame) {\n      let maxH = 0;\n      let maxV = 0;\n      let component;\n      let componentId;\n      for (componentId in frame.components) {\n        if (frame.components.hasOwnProperty(componentId)) {\n          component = frame.components[componentId];\n          if (maxH < component.h) {\n            maxH = component.h;\n          }\n          if (maxV < component.v) {\n            maxV = component.v;\n          }\n        }\n      }\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n      for (componentId in frame.components) {\n        if (frame.components.hasOwnProperty(componentId)) {\n          component = frame.components[componentId];\n          const blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n          const blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / maxV);\n          const blocksPerLineForMcu = mcusPerLine * component.h;\n          const blocksPerColumnForMcu = mcusPerColumn * component.v;\n          const blocks = [];\n          for (let i = 0; i < blocksPerColumnForMcu; i++) {\n            const row = [];\n            for (let j = 0; j < blocksPerLineForMcu; j++) {\n              row.push(new Int32Array(64));\n            }\n            blocks.push(row);\n          }\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n          component.blocks = blocks;\n        }\n      }\n      frame.maxH = maxH;\n      frame.maxV = maxV;\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let fileMarker = readUint16();\n    if (fileMarker !== 0xFFD8) { // SOI (Start of Image)\n      throw new Error('SOI not found');\n    }\n\n    fileMarker = readUint16();\n    while (fileMarker !== 0xFFD9) { // EOI (End of image)\n      switch (fileMarker) {\n        case 0xFF00: break;\n        case 0xFFE0: // APP0 (Application Specific)\n        case 0xFFE1: // APP1\n        case 0xFFE2: // APP2\n        case 0xFFE3: // APP3\n        case 0xFFE4: // APP4\n        case 0xFFE5: // APP5\n        case 0xFFE6: // APP6\n        case 0xFFE7: // APP7\n        case 0xFFE8: // APP8\n        case 0xFFE9: // APP9\n        case 0xFFEA: // APP10\n        case 0xFFEB: // APP11\n        case 0xFFEC: // APP12\n        case 0xFFED: // APP13\n        case 0xFFEE: // APP14\n        case 0xFFEF: // APP15\n        case 0xFFFE: { // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xFFE0) {\n            if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49\n              && appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n              this.jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(14, 14 + (3 * appData[12] * appData[13])),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xFFEE) {\n            if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F\n              && appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n              this.adobe = {\n                version: appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n        }\n\n        case 0xFFDB: { // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16();\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Int32Array(64);\n            if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n              for (let j = 0; j < 64; j++) {\n                const z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if ((quantizationTableSpec >> 4) === 1) { // 16 bit\n              for (let j = 0; j < 64; j++) {\n                const z = dctZigZag[j];\n                tableData[z] = readUint16();\n              }\n            } else {\n              throw new Error('DQT: invalid table spec');\n            }\n            this.quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n        }\n\n        case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xFFC2: { // SOF2 (Start of Frame, Progressive DCT)\n          readUint16(); // skip data length\n          const frame = {\n            extended: (fileMarker === 0xFFC1),\n            progressive: (fileMarker === 0xFFC2),\n            precision: data[offset++],\n            scanLines: readUint16(),\n            samplesPerLine: readUint16(),\n            components: {},\n            componentsOrder: [],\n          };\n\n          const componentsCount = data[offset++];\n          let componentId;\n          // let maxH = 0;\n          // let maxV = 0;\n          for (let i = 0; i < componentsCount; i++) {\n            componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            const qId = data[offset + 2];\n            frame.componentsOrder.push(componentId);\n            frame.components[componentId] = {\n              h,\n              v,\n              quantizationIdx: qId,\n            };\n            offset += 3;\n          }\n          prepareComponents(frame);\n          this.frames.push(frame);\n          break;\n        }\n\n        case 0xFFC4: { // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16();\n          for (let i = 2; i < huffmanLength;) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (let j = 0; j < 16; j++, offset++) {\n              codeLengths[j] = data[offset];\n              codeLengthSum += codeLengths[j];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (let j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            if ((huffmanTableSpec >> 4) === 0) {\n              this.huffmanTablesDC[huffmanTableSpec & 15] = buildHuffmanTable(\n                codeLengths, huffmanValues,\n              );\n            } else {\n              this.huffmanTablesAC[huffmanTableSpec & 15] = buildHuffmanTable(\n                codeLengths, huffmanValues,\n              );\n            }\n          }\n          break;\n        }\n\n        case 0xFFDD: // DRI (Define Restart Interval)\n          readUint16(); // skip data length\n          this.resetInterval = readUint16();\n          break;\n\n        case 0xFFDA: { // SOS (Start of Scan)\n          readUint16(); // skip length\n          const selectorsCount = data[offset++];\n          const components = [];\n          const frame = this.frames[0];\n          for (let i = 0; i < selectorsCount; i++) {\n            const component = frame.components[data[offset++]];\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = this.huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = this.huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++];\n          const spectralEnd = data[offset++];\n          const successiveApproximation = data[offset++];\n          const processed = decodeScan(data, offset,\n            frame, components, this.resetInterval,\n            spectralStart, spectralEnd,\n            successiveApproximation >> 4, successiveApproximation & 15);\n          offset += processed;\n          break;\n        }\n\n        case 0xFFFF: // Fill bytes\n          if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          if (data[offset - 3] === 0xFF\n            && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n            // could be incorrect encoding -- last 0xFF byte of the previous\n            // block was eaten by the encoder\n            offset -= 3;\n            break;\n          }\n          throw new Error(`unknown JPEG marker ${fileMarker.toString(16)}`);\n      }\n      fileMarker = readUint16();\n    }\n  }\n\n  getResult() {\n    const { frames } = this;\n    if (this.frames.length === 0) {\n      throw new Error('no frames were decoded');\n    } else if (this.frames.length > 1) {\n      console.warn('more than one frame is not supported');\n    }\n\n    // set each frame's components quantization table\n    for (let i = 0; i < this.frames.length; i++) {\n      const cp = this.frames[i].components;\n      for (const j of Object.keys(cp)) {\n        cp[j].quantizationTable = this.quantizationTables[cp[j].quantizationIdx];\n        delete cp[j].quantizationIdx;\n      }\n    }\n\n    const frame = frames[0];\n    const { components, componentsOrder } = frame;\n    const outComponents = [];\n    const width = frame.samplesPerLine;\n    const height = frame.scanLines;\n\n    for (let i = 0; i < componentsOrder.length; i++) {\n      const component = components[componentsOrder[i]];\n      outComponents.push({\n        lines: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n      });\n    }\n\n    const out = new Uint8Array(width * height * outComponents.length);\n    let oi = 0;\n    for (let y = 0; y < height; ++y) {\n      for (let x = 0; x < width; ++x) {\n        for (let i = 0; i < outComponents.length; ++i) {\n          const component = outComponents[i];\n          out[oi] = component.lines[0 | y * component.scaleY][0 | x * component.scaleX];\n          ++oi;\n        }\n      }\n    }\n    return out;\n  }\n}\n\nexport default class JpegDecoder extends BaseDecoder {\n  constructor(fileDirectory) {\n    super();\n    this.reader = new JpegStreamReader();\n    if (fileDirectory.JPEGTables) {\n      this.reader.parse(fileDirectory.JPEGTables);\n    }\n  }\n\n  decodeBlock(buffer) {\n    this.reader.resetFrames();\n    this.reader.parse(new Uint8Array(buffer));\n    return this.reader.getResult().buffer;\n  }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { inflate } from 'pako';\nimport BaseDecoder from './basedecoder.js';\n\nexport default class DeflateDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    return inflate(new Uint8Array(buffer)).buffer;\n  }\n}\n","import BaseDecoder from './basedecoder.js';\n\nexport default class PackbitsDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    const dataView = new DataView(buffer);\n    const out = [];\n\n    for (let i = 0; i < buffer.byteLength; ++i) {\n      let header = dataView.getInt8(i);\n      if (header < 0) {\n        const next = dataView.getUint8(i + 1);\n        header = -header;\n        for (let j = 0; j <= header; ++j) {\n          out.push(next);\n        }\n        i += 1;\n      } else {\n        for (let j = 0; j <= header; ++j) {\n          out.push(dataView.getUint8(i + j + 1));\n        }\n        i += header + 1;\n      }\n    }\n    return new Uint8Array(out).buffer;\n  }\n}\n","﻿/* jshint forin: false, bitwise: false */\n/*\nCopyright 2015-2021 Esri\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nA copy of the license and additional notices are located with the\nsource distribution at:\n\nhttp://github.com/Esri/lerc/\n\nContributors:  Johannes Schmid, (LERC v1)\n               Chayanika Khatua, (LERC v1)\n               Wenxue Ju (LERC v1, v2.x)\n*/\n\n/* Copyright 2015-2021 Esri. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 @preserve */\n\n/**\n * a module for decoding LERC blobs\n * @module Lerc\n */\n(function() {\n  //this decoder supports all lerc versions, each version has its own class (LercDecode and Lerc2Decode). \n  //the exported module handles format variation autoamtically.\n\n  //the original LercDecode for Version 1\n  var LercDecode = (function() {\n\n    // Note: currently, this module only has an implementation for decoding LERC data, not encoding. The name of\n    // the class was chosen to be future proof.\n\n    var CntZImage = {};\n\n    CntZImage.defaultNoDataValue = -3.4027999387901484e+38; // smallest Float32 value\n\n    /**\n     * Decode a LERC byte stream and return an object containing the pixel data and some required and optional\n     * information about it, such as the image's width and height.\n     *\n     * @param {ArrayBuffer} input The LERC input byte stream\n     * @param {object} [options] Decoding options, containing any of the following properties:\n     * @config {number} [inputOffset = 0]\n     *        Skip the first inputOffset bytes of the input byte stream. A valid LERC file is expected at that position.\n     * @config {Uint8Array} [encodedMask = null]\n     *        If specified, the decoder will not read mask information from the input and use the specified encoded\n     *        mask data instead. Mask header/data must not be present in the LERC byte stream in this case.\n     * @config {number} [noDataValue = LercCode.defaultNoDataValue]\n     *        Pixel value to use for masked pixels.\n     * @config {ArrayBufferView|Array} [pixelType = Float32Array]\n     *        The desired type of the pixelData array in the return value. Note that it is the caller's responsibility to\n     *        provide an appropriate noDataValue if the default pixelType is overridden.\n     * @config {boolean} [returnMask = false]\n     *        If true, the return value will contain a maskData property of type Uint8Array which has one element per\n     *        pixel, the value of which is 1 or 0 depending on whether that pixel's data is present or masked. If the\n     *        input LERC data does not contain a mask, maskData will not be returned.\n     * @config {boolean} [returnEncodedMask = false]\n     *        If true, the return value will contain a encodedMaskData property, which can be passed into encode() as\n     *        encodedMask.\n     * @config {boolean} [returnFileInfo = false]\n     *        If true, the return value will have a fileInfo property that contains metadata obtained from the\n     *        LERC headers and the decoding process.\n     * @config {boolean} [computeUsedBitDepths = false]\n     *        If true, the fileInfo property in the return value will contain the set of all block bit depths\n     *        encountered during decoding. Will only have an effect if returnFileInfo option is true.\n     * @returns {{width, height, pixelData, minValue, maxValue, noDataValue, maskData, encodedMaskData, fileInfo}}\n     */\n    CntZImage.decode = function(input, options) {\n      options = options || {};\n\n      var skipMask = options.encodedMaskData || (options.encodedMaskData === null);\n      var parsedData = parse(input, options.inputOffset || 0, skipMask);\n\n      var noDataValue = (options.noDataValue !== null) ? options.noDataValue : CntZImage.defaultNoDataValue;\n\n      var uncompressedData = uncompressPixelValues(parsedData, options.pixelType || Float32Array,\n        options.encodedMaskData, noDataValue, options.returnMask);\n\n      var result = {\n        width: parsedData.width,\n        height: parsedData.height,\n        pixelData: uncompressedData.resultPixels,\n        minValue: uncompressedData.minValue,\n        maxValue: parsedData.pixels.maxValue,\n        noDataValue: noDataValue\n      };\n\n      if (uncompressedData.resultMask) {\n        result.maskData = uncompressedData.resultMask;\n      }\n\n      if (options.returnEncodedMask && parsedData.mask) {\n        result.encodedMaskData = parsedData.mask.bitset ? parsedData.mask.bitset : null;\n      }\n\n      if (options.returnFileInfo) {\n        result.fileInfo = formatFileInfo(parsedData);\n        if (options.computeUsedBitDepths) {\n          result.fileInfo.bitDepths = computeUsedBitDepths(parsedData);\n        }\n      }\n\n      return result;\n    };\n\n    var uncompressPixelValues = function(data, TypedArrayClass, maskBitset, noDataValue, storeDecodedMask) {\n      var blockIdx = 0;\n      var numX = data.pixels.numBlocksX;\n      var numY = data.pixels.numBlocksY;\n      var blockWidth = Math.floor(data.width / numX);\n      var blockHeight = Math.floor(data.height / numY);\n      var scale = 2 * data.maxZError;\n      var minValue = Number.MAX_VALUE, currentValue;\n      maskBitset = maskBitset || ((data.mask) ? data.mask.bitset : null);\n\n      var resultPixels, resultMask;\n      resultPixels = new TypedArrayClass(data.width * data.height);\n      if (storeDecodedMask && maskBitset) {\n        resultMask = new Uint8Array(data.width * data.height);\n      }\n      var blockDataBuffer = new Float32Array(blockWidth * blockHeight);\n\n      var xx, yy;\n      for (var y = 0; y <= numY; y++) {\n        var thisBlockHeight = (y !== numY) ? blockHeight : (data.height % numY);\n        if (thisBlockHeight === 0) {\n          continue;\n        }\n        for (var x = 0; x <= numX; x++) {\n          var thisBlockWidth = (x !== numX) ? blockWidth : (data.width % numX);\n          if (thisBlockWidth === 0) {\n            continue;\n          }\n\n          var outPtr = y * data.width * blockHeight + x * blockWidth;\n          var outStride = data.width - thisBlockWidth;\n\n          var block = data.pixels.blocks[blockIdx];\n\n          var blockData, blockPtr, constValue;\n          if (block.encoding < 2) {\n            // block is either uncompressed or bit-stuffed (encodings 0 and 1)\n            if (block.encoding === 0) {\n              // block is uncompressed\n              blockData = block.rawData;\n            } else {\n              // block is bit-stuffed\n              unstuff(block.stuffedData, block.bitsPerPixel, block.numValidPixels, block.offset, scale, blockDataBuffer, data.pixels.maxValue);\n              blockData = blockDataBuffer;\n            }\n            blockPtr = 0;\n          }\n          else if (block.encoding === 2) {\n            // block is all 0\n            constValue = 0;\n          }\n          else {\n            // block has constant value (encoding === 3)\n            constValue = block.offset;\n          }\n\n          var maskByte;\n          if (maskBitset) {\n            for (yy = 0; yy < thisBlockHeight; yy++) {\n              if (outPtr & 7) {\n                //\n                maskByte = maskBitset[outPtr >> 3];\n                maskByte <<= outPtr & 7;\n              }\n              for (xx = 0; xx < thisBlockWidth; xx++) {\n                if (!(outPtr & 7)) {\n                  // read next byte from mask\n                  maskByte = maskBitset[outPtr >> 3];\n                }\n                if (maskByte & 128) {\n                  // pixel data present\n                  if (resultMask) {\n                    resultMask[outPtr] = 1;\n                  }\n                  currentValue = (block.encoding < 2) ? blockData[blockPtr++] : constValue;\n                  minValue = minValue > currentValue ? currentValue : minValue;\n                  resultPixels[outPtr++] = currentValue;\n                } else {\n                  // pixel data not present\n                  if (resultMask) {\n                    resultMask[outPtr] = 0;\n                  }\n                  resultPixels[outPtr++] = noDataValue;\n                }\n                maskByte <<= 1;\n              }\n              outPtr += outStride;\n            }\n          } else {\n            // mask not present, simply copy block over\n            if (block.encoding < 2) {\n              // duplicating this code block for performance reasons\n              // blockData case:\n              for (yy = 0; yy < thisBlockHeight; yy++) {\n                for (xx = 0; xx < thisBlockWidth; xx++) {\n                  currentValue = blockData[blockPtr++];\n                  minValue = minValue > currentValue ? currentValue : minValue;\n                  resultPixels[outPtr++] = currentValue;\n                }\n                outPtr += outStride;\n              }\n            }\n            else {\n              // constValue case:\n              minValue = minValue > constValue ? constValue : minValue;\n              for (yy = 0; yy < thisBlockHeight; yy++) {\n                for (xx = 0; xx < thisBlockWidth; xx++) {\n                  resultPixels[outPtr++] = constValue;\n                }\n                outPtr += outStride;\n              }\n            }\n          }\n          if ((block.encoding === 1) && (blockPtr !== block.numValidPixels)) {\n            throw \"Block and Mask do not match\";\n          }\n          blockIdx++;\n        }\n      }\n\n      return {\n        resultPixels: resultPixels,\n        resultMask: resultMask,\n        minValue: minValue\n      };\n    };\n\n    var formatFileInfo = function(data) {\n      return {\n        \"fileIdentifierString\": data.fileIdentifierString,\n        \"fileVersion\": data.fileVersion,\n        \"imageType\": data.imageType,\n        \"height\": data.height,\n        \"width\": data.width,\n        \"maxZError\": data.maxZError,\n        \"eofOffset\": data.eofOffset,\n        \"mask\": data.mask ? {\n          \"numBlocksX\": data.mask.numBlocksX,\n          \"numBlocksY\": data.mask.numBlocksY,\n          \"numBytes\": data.mask.numBytes,\n          \"maxValue\": data.mask.maxValue\n        } : null,\n        \"pixels\": {\n          \"numBlocksX\": data.pixels.numBlocksX,\n          \"numBlocksY\": data.pixels.numBlocksY,\n          \"numBytes\": data.pixels.numBytes,\n          \"maxValue\": data.pixels.maxValue,\n          \"noDataValue\": data.noDataValue\n        }\n      };\n    };\n\n    var computeUsedBitDepths = function(data) {\n      var numBlocks = data.pixels.numBlocksX * data.pixels.numBlocksY;\n      var bitDepths = {};\n      for (var i = 0; i < numBlocks; i++) {\n        var block = data.pixels.blocks[i];\n        if (block.encoding === 0) {\n          bitDepths.float32 = true;\n        } else if (block.encoding === 1) {\n          bitDepths[block.bitsPerPixel] = true;\n        } else {\n          bitDepths[0] = true;\n        }\n      }\n\n      return Object.keys(bitDepths);\n    };\n\n    var parse = function(input, fp, skipMask) {\n      var data = {};\n\n      // File header\n      var fileIdView = new Uint8Array(input, fp, 10);\n      data.fileIdentifierString = String.fromCharCode.apply(null, fileIdView);\n      if (data.fileIdentifierString.trim() !== \"CntZImage\") {\n        throw \"Unexpected file identifier string: \" + data.fileIdentifierString;\n      }\n      fp += 10;\n      var view = new DataView(input, fp, 24);\n      data.fileVersion = view.getInt32(0, true);\n      data.imageType = view.getInt32(4, true);\n      data.height = view.getUint32(8, true);\n      data.width = view.getUint32(12, true);\n      data.maxZError = view.getFloat64(16, true);\n      fp += 24;\n\n      // Mask Header\n      if (!skipMask) {\n        view = new DataView(input, fp, 16);\n        data.mask = {};\n        data.mask.numBlocksY = view.getUint32(0, true);\n        data.mask.numBlocksX = view.getUint32(4, true);\n        data.mask.numBytes = view.getUint32(8, true);\n        data.mask.maxValue = view.getFloat32(12, true);\n        fp += 16;\n\n        // Mask Data\n        if (data.mask.numBytes > 0) {\n          var bitset = new Uint8Array(Math.ceil(data.width * data.height / 8));\n          view = new DataView(input, fp, data.mask.numBytes);\n          var cnt = view.getInt16(0, true);\n          var ip = 2, op = 0;\n          do {\n            if (cnt > 0) {\n              while (cnt--) { bitset[op++] = view.getUint8(ip++); }\n            } else {\n              var val = view.getUint8(ip++);\n              cnt = -cnt;\n              while (cnt--) { bitset[op++] = val; }\n            }\n            cnt = view.getInt16(ip, true);\n            ip += 2;\n          } while (ip < data.mask.numBytes);\n          if ((cnt !== -32768) || (op < bitset.length)) {\n            throw \"Unexpected end of mask RLE encoding\";\n          }\n          data.mask.bitset = bitset;\n          fp += data.mask.numBytes;\n        }\n        else if ((data.mask.numBytes | data.mask.numBlocksY | data.mask.maxValue) === 0) {  // Special case, all nodata\n          data.mask.bitset = new Uint8Array(Math.ceil(data.width * data.height / 8));\n        }\n      }\n\n      // Pixel Header\n      view = new DataView(input, fp, 16);\n      data.pixels = {};\n      data.pixels.numBlocksY = view.getUint32(0, true);\n      data.pixels.numBlocksX = view.getUint32(4, true);\n      data.pixels.numBytes = view.getUint32(8, true);\n      data.pixels.maxValue = view.getFloat32(12, true);\n      fp += 16;\n\n      var numBlocksX = data.pixels.numBlocksX;\n      var numBlocksY = data.pixels.numBlocksY;\n      // the number of blocks specified in the header does not take into account the blocks at the end of\n      // each row/column with a special width/height that make the image complete in case the width is not\n      // evenly divisible by the number of blocks.\n      var actualNumBlocksX = numBlocksX + ((data.width % numBlocksX) > 0 ? 1 : 0);\n      var actualNumBlocksY = numBlocksY + ((data.height % numBlocksY) > 0 ? 1 : 0);\n      data.pixels.blocks = new Array(actualNumBlocksX * actualNumBlocksY);\n      var blockI = 0;\n      for (var blockY = 0; blockY < actualNumBlocksY; blockY++) {\n        for (var blockX = 0; blockX < actualNumBlocksX; blockX++) {\n\n          // Block\n          var size = 0;\n          var bytesLeft = input.byteLength - fp;\n          view = new DataView(input, fp, Math.min(10, bytesLeft));\n          var block = {};\n          data.pixels.blocks[blockI++] = block;\n          var headerByte = view.getUint8(0); size++;\n          block.encoding = headerByte & 63;\n          if (block.encoding > 3) {\n            throw \"Invalid block encoding (\" + block.encoding + \")\";\n          }\n          if (block.encoding === 2) {\n            fp++;\n            continue;\n          }\n          if ((headerByte !== 0) && (headerByte !== 2)) {\n            headerByte >>= 6;\n            block.offsetType = headerByte;\n            if (headerByte === 2) {\n              block.offset = view.getInt8(1); size++;\n            } else if (headerByte === 1) {\n              block.offset = view.getInt16(1, true); size += 2;\n            } else if (headerByte === 0) {\n              block.offset = view.getFloat32(1, true); size += 4;\n            } else {\n              throw \"Invalid block offset type\";\n            }\n\n            if (block.encoding === 1) {\n              headerByte = view.getUint8(size); size++;\n              block.bitsPerPixel = headerByte & 63;\n              headerByte >>= 6;\n              block.numValidPixelsType = headerByte;\n              if (headerByte === 2) {\n                block.numValidPixels = view.getUint8(size); size++;\n              } else if (headerByte === 1) {\n                block.numValidPixels = view.getUint16(size, true); size += 2;\n              } else if (headerByte === 0) {\n                block.numValidPixels = view.getUint32(size, true); size += 4;\n              } else {\n                throw \"Invalid valid pixel count type\";\n              }\n            }\n          }\n          fp += size;\n\n          if (block.encoding === 3) {\n            continue;\n          }\n\n          var arrayBuf, store8;\n          if (block.encoding === 0) {\n            var numPixels = (data.pixels.numBytes - 1) / 4;\n            if (numPixels !== Math.floor(numPixels)) {\n              throw \"uncompressed block has invalid length\";\n            }\n            arrayBuf = new ArrayBuffer(numPixels * 4);\n            store8 = new Uint8Array(arrayBuf);\n            store8.set(new Uint8Array(input, fp, numPixels * 4));\n            var rawData = new Float32Array(arrayBuf);\n            block.rawData = rawData;\n            fp += numPixels * 4;\n          } else if (block.encoding === 1) {\n            var dataBytes = Math.ceil(block.numValidPixels * block.bitsPerPixel / 8);\n            var dataWords = Math.ceil(dataBytes / 4);\n            arrayBuf = new ArrayBuffer(dataWords * 4);\n            store8 = new Uint8Array(arrayBuf);\n            store8.set(new Uint8Array(input, fp, dataBytes));\n            block.stuffedData = new Uint32Array(arrayBuf);\n            fp += dataBytes;\n          }\n        }\n      }\n      data.eofOffset = fp;\n      return data;\n    };\n\n    var unstuff = function(src, bitsPerPixel, numPixels, offset, scale, dest, maxValue) {\n      var bitMask = (1 << bitsPerPixel) - 1;\n      var i = 0, o;\n      var bitsLeft = 0;\n      var n, buffer;\n      var nmax = Math.ceil((maxValue - offset) / scale);\n      // get rid of trailing bytes that are already part of next block\n      var numInvalidTailBytes = src.length * 4 - Math.ceil(bitsPerPixel * numPixels / 8);\n      src[src.length - 1] <<= 8 * numInvalidTailBytes;\n\n      for (o = 0; o < numPixels; o++) {\n        if (bitsLeft === 0) {\n          buffer = src[i++];\n          bitsLeft = 32;\n        }\n        if (bitsLeft >= bitsPerPixel) {\n          n = (buffer >>> (bitsLeft - bitsPerPixel)) & bitMask;\n          bitsLeft -= bitsPerPixel;\n        } else {\n          var missingBits = (bitsPerPixel - bitsLeft);\n          n = ((buffer & bitMask) << missingBits) & bitMask;\n          buffer = src[i++];\n          bitsLeft = 32 - missingBits;\n          n += (buffer >>> bitsLeft);\n        }\n        //pixel values may exceed max due to quantization\n        dest[o] = n < nmax ? offset + n * scale : maxValue;\n      }\n      return dest;\n    };\n\n    return CntZImage;\n  })();\n\n  //version 2. Supports 2.1, 2.2, 2.3\n  var Lerc2Decode = (function() {\n    \"use strict\";\n    // Note: currently, this module only has an implementation for decoding LERC data, not encoding. The name of\n    // the class was chosen to be future proof, following LercDecode.\n\n    /*****************************************\n    * private static class bitsutffer used by Lerc2Decode\n    *******************************************/\n    var BitStuffer = {\n      //methods ending with 2 are for the new byte order used by Lerc2.3 and above.\n      //originalUnstuff is used to unpack Huffman code table. code is duplicated to unstuffx for performance reasons.\n      unstuff: function(src, dest, bitsPerPixel, numPixels, lutArr, offset, scale, maxValue) {\n        var bitMask = (1 << bitsPerPixel) - 1;\n        var i = 0, o;\n        var bitsLeft = 0;\n        var n, buffer, missingBits, nmax;\n\n        // get rid of trailing bytes that are already part of next block\n        var numInvalidTailBytes = src.length * 4 - Math.ceil(bitsPerPixel * numPixels / 8);\n        src[src.length - 1] <<= 8 * numInvalidTailBytes;\n        if (lutArr) {\n          for (o = 0; o < numPixels; o++) {\n            if (bitsLeft === 0) {\n              buffer = src[i++];\n              bitsLeft = 32;\n            }\n            if (bitsLeft >= bitsPerPixel) {\n              n = (buffer >>> (bitsLeft - bitsPerPixel)) & bitMask;\n              bitsLeft -= bitsPerPixel;\n            }\n            else {\n              missingBits = (bitsPerPixel - bitsLeft);\n              n = ((buffer & bitMask) << missingBits) & bitMask;\n              buffer = src[i++];\n              bitsLeft = 32 - missingBits;\n              n += (buffer >>> bitsLeft);\n            }\n            dest[o] = lutArr[n];//offset + lutArr[n] * scale;\n          }\n        }\n        else {\n          nmax = Math.ceil((maxValue - offset) / scale);\n          for (o = 0; o < numPixels; o++) {\n            if (bitsLeft === 0) {\n              buffer = src[i++];\n              bitsLeft = 32;\n            }\n            if (bitsLeft >= bitsPerPixel) {\n              n = (buffer >>> (bitsLeft - bitsPerPixel)) & bitMask;\n              bitsLeft -= bitsPerPixel;\n            }\n            else {\n              missingBits = (bitsPerPixel - bitsLeft);\n              n = ((buffer & bitMask) << missingBits) & bitMask;\n              buffer = src[i++];\n              bitsLeft = 32 - missingBits;\n              n += (buffer >>> bitsLeft);\n            }\n            //pixel values may exceed max due to quantization\n            dest[o] = n < nmax ? offset + n * scale : maxValue;\n          }\n        }\n      },\n\n      unstuffLUT: function(src, bitsPerPixel, numPixels, offset, scale, maxValue) {\n        var bitMask = (1 << bitsPerPixel) - 1;\n        var i = 0, o = 0, missingBits = 0, bitsLeft = 0, n = 0;\n        var buffer;\n        var dest = [];\n\n        // get rid of trailing bytes that are already part of next block\n        var numInvalidTailBytes = src.length * 4 - Math.ceil(bitsPerPixel * numPixels / 8);\n        src[src.length - 1] <<= 8 * numInvalidTailBytes;\n\n        var nmax = Math.ceil((maxValue - offset) / scale);\n        for (o = 0; o < numPixels; o++) {\n          if (bitsLeft === 0) {\n            buffer = src[i++];\n            bitsLeft = 32;\n          }\n          if (bitsLeft >= bitsPerPixel) {\n            n = (buffer >>> (bitsLeft - bitsPerPixel)) & bitMask;\n            bitsLeft -= bitsPerPixel;\n          } else {\n            missingBits = (bitsPerPixel - bitsLeft);\n            n = ((buffer & bitMask) << missingBits) & bitMask;\n            buffer = src[i++];\n            bitsLeft = 32 - missingBits;\n            n += (buffer >>> bitsLeft);\n          }\n          //dest.push(n);\n          dest[o] = n < nmax ? offset + n * scale : maxValue;\n        }\n        dest.unshift(offset);//1st one\n        return dest;\n      },\n\n      unstuff2: function(src, dest, bitsPerPixel, numPixels, lutArr, offset, scale, maxValue) {\n        var bitMask = (1 << bitsPerPixel) - 1;\n        var i = 0, o;\n        var bitsLeft = 0, bitPos = 0;\n        var n, buffer, missingBits;\n        if (lutArr) {\n          for (o = 0; o < numPixels; o++) {\n            if (bitsLeft === 0) {\n              buffer = src[i++];\n              bitsLeft = 32;\n              bitPos = 0;\n            }\n            if (bitsLeft >= bitsPerPixel) {\n              n = ((buffer >>> bitPos) & bitMask);\n              bitsLeft -= bitsPerPixel;\n              bitPos += bitsPerPixel;\n            } else {\n              missingBits = (bitsPerPixel - bitsLeft);\n              n = (buffer >>> bitPos) & bitMask;\n              buffer = src[i++];\n              bitsLeft = 32 - missingBits;\n              n |= (buffer & ((1 << missingBits) - 1)) << (bitsPerPixel - missingBits);\n              bitPos = missingBits;\n            }\n            dest[o] = lutArr[n];\n          }\n        }\n        else {\n          var nmax = Math.ceil((maxValue - offset) / scale);\n          for (o = 0; o < numPixels; o++) {\n            if (bitsLeft === 0) {\n              buffer = src[i++];\n              bitsLeft = 32;\n              bitPos = 0;\n            }\n            if (bitsLeft >= bitsPerPixel) {\n              //no unsigned left shift\n              n = ((buffer >>> bitPos) & bitMask);\n              bitsLeft -= bitsPerPixel;\n              bitPos += bitsPerPixel;\n            } else {\n              missingBits = (bitsPerPixel - bitsLeft);\n              n = (buffer >>> bitPos) & bitMask;//((buffer & bitMask) << missingBits) & bitMask;\n              buffer = src[i++];\n              bitsLeft = 32 - missingBits;\n              n |= (buffer & ((1 << missingBits) - 1)) << (bitsPerPixel - missingBits);\n              bitPos = missingBits;\n            }\n            //pixel values may exceed max due to quantization\n            dest[o] = n < nmax ? offset + n * scale : maxValue;\n          }\n        }\n        return dest;\n      },\n\n      unstuffLUT2: function(src, bitsPerPixel, numPixels, offset, scale, maxValue) {\n        var bitMask = (1 << bitsPerPixel) - 1;\n        var i = 0, o = 0, missingBits = 0, bitsLeft = 0, n = 0, bitPos = 0;\n        var buffer;\n        var dest = [];\n        var nmax = Math.ceil((maxValue - offset) / scale);\n        for (o = 0; o < numPixels; o++) {\n          if (bitsLeft === 0) {\n            buffer = src[i++];\n            bitsLeft = 32;\n            bitPos = 0;\n          }\n          if (bitsLeft >= bitsPerPixel) {\n            //no unsigned left shift\n            n = ((buffer >>> bitPos) & bitMask);\n            bitsLeft -= bitsPerPixel;\n            bitPos += bitsPerPixel;\n          } else {\n            missingBits = (bitsPerPixel - bitsLeft);\n            n = (buffer >>> bitPos) & bitMask;//((buffer & bitMask) << missingBits) & bitMask;\n            buffer = src[i++];\n            bitsLeft = 32 - missingBits;\n            n |= (buffer & ((1 << missingBits) - 1)) << (bitsPerPixel - missingBits);\n            bitPos = missingBits;\n          }\n          //dest.push(n);\n          dest[o] = n < nmax ? offset + n * scale : maxValue;\n        }\n        dest.unshift(offset);\n        return dest;\n      },\n\n      originalUnstuff: function(src, dest, bitsPerPixel, numPixels) {\n        var bitMask = (1 << bitsPerPixel) - 1;\n        var i = 0, o;\n        var bitsLeft = 0;\n        var n, buffer, missingBits;\n\n        // get rid of trailing bytes that are already part of next block\n        var numInvalidTailBytes = src.length * 4 - Math.ceil(bitsPerPixel * numPixels / 8);\n        src[src.length - 1] <<= 8 * numInvalidTailBytes;\n\n        for (o = 0; o < numPixels; o++) {\n          if (bitsLeft === 0) {\n            buffer = src[i++];\n            bitsLeft = 32;\n          }\n          if (bitsLeft >= bitsPerPixel) {\n            n = (buffer >>> (bitsLeft - bitsPerPixel)) & bitMask;\n            bitsLeft -= bitsPerPixel;\n          }\n          else {\n            missingBits = (bitsPerPixel - bitsLeft);\n            n = ((buffer & bitMask) << missingBits) & bitMask;\n            buffer = src[i++];\n            bitsLeft = 32 - missingBits;\n            n += (buffer >>> bitsLeft);\n          }\n          dest[o] = n;\n        }\n        return dest;\n      },\n\n      originalUnstuff2: function(src, dest, bitsPerPixel, numPixels) {\n        var bitMask = (1 << bitsPerPixel) - 1;\n        var i = 0, o;\n        var bitsLeft = 0, bitPos = 0;\n        var n, buffer, missingBits;\n        //micro-optimizations\n        for (o = 0; o < numPixels; o++) {\n          if (bitsLeft === 0) {\n            buffer = src[i++];\n            bitsLeft = 32;\n            bitPos = 0;\n          }\n          if (bitsLeft >= bitsPerPixel) {\n            //no unsigned left shift\n            n = ((buffer >>> bitPos) & bitMask);\n            bitsLeft -= bitsPerPixel;\n            bitPos += bitsPerPixel;\n          } else {\n            missingBits = (bitsPerPixel - bitsLeft);\n            n = (buffer >>> bitPos) & bitMask;//((buffer & bitMask) << missingBits) & bitMask;\n            buffer = src[i++];\n            bitsLeft = 32 - missingBits;\n            n |= (buffer & ((1 << missingBits) - 1)) << (bitsPerPixel - missingBits);\n            bitPos = missingBits;\n          }\n          dest[o] = n;\n        }\n        return dest;\n      }\n    };\n\n    /*****************************************\n    *private static class used by Lerc2Decode\n    ******************************************/\n    var Lerc2Helpers = {\n      HUFFMAN_LUT_BITS_MAX: 12, //use 2^12 lut, treat it like constant\n      computeChecksumFletcher32: function(input) {\n\n        var sum1 = 0xffff, sum2 = 0xffff;\n        var len = input.length;\n        var words = Math.floor(len / 2);\n        var i = 0;\n        while (words) {\n          var tlen = (words >= 359) ? 359 : words;\n          words -= tlen;\n          do {\n            sum1 += (input[i++] << 8);\n            sum2 += sum1 += input[i++];\n          } while (--tlen);\n\n          sum1 = (sum1 & 0xffff) + (sum1 >>> 16);\n          sum2 = (sum2 & 0xffff) + (sum2 >>> 16);\n        }\n\n        // add the straggler byte if it exists\n        if (len & 1) {\n          sum2 += sum1 += (input[i] << 8);\n        }\n        // second reduction step to reduce sums to 16 bits\n        sum1 = (sum1 & 0xffff) + (sum1 >>> 16);\n        sum2 = (sum2 & 0xffff) + (sum2 >>> 16);\n\n        return (sum2 << 16 | sum1) >>> 0;\n      },\n\n      readHeaderInfo: function(input, data) {\n        var ptr = data.ptr;\n        var fileIdView = new Uint8Array(input, ptr, 6);\n        var headerInfo = {};\n        headerInfo.fileIdentifierString = String.fromCharCode.apply(null, fileIdView);\n        if (headerInfo.fileIdentifierString.lastIndexOf(\"Lerc2\", 0) !== 0) {\n          throw \"Unexpected file identifier string (expect Lerc2 ): \" + headerInfo.fileIdentifierString;\n        }\n        ptr += 6;\n        var view = new DataView(input, ptr, 8);\n        var fileVersion = view.getInt32(0, true);\n        headerInfo.fileVersion = fileVersion;\n        ptr += 4;\n        if (fileVersion >= 3) {\n          headerInfo.checksum = view.getUint32(4, true); //nrows\n          ptr += 4;\n        }\n\n        //keys start from here\n        view = new DataView(input, ptr, 12);\n        headerInfo.height = view.getUint32(0, true); //nrows\n        headerInfo.width = view.getUint32(4, true); //ncols\n        ptr += 8;\n        if (fileVersion >= 4) {\n          headerInfo.numDims = view.getUint32(8, true);\n          ptr += 4;\n        }\n        else {\n          headerInfo.numDims = 1;\n        }\n\n        view = new DataView(input, ptr, 40);\n        headerInfo.numValidPixel = view.getUint32(0, true);\n        headerInfo.microBlockSize = view.getInt32(4, true);\n        headerInfo.blobSize = view.getInt32(8, true);\n        headerInfo.imageType = view.getInt32(12, true);\n\n        headerInfo.maxZError = view.getFloat64(16, true);\n        headerInfo.zMin = view.getFloat64(24, true);\n        headerInfo.zMax = view.getFloat64(32, true);\n        ptr += 40;\n        data.headerInfo = headerInfo;\n        data.ptr = ptr;\n\n        var checksum, keyLength;\n        if (fileVersion >= 3) {\n          keyLength = fileVersion >= 4 ? 52 : 48;\n          checksum = this.computeChecksumFletcher32(new Uint8Array(input, ptr - keyLength, headerInfo.blobSize - 14));\n          if (checksum !== headerInfo.checksum) {\n            throw \"Checksum failed.\";\n          }\n        }\n        return true;\n      },\n\n      checkMinMaxRanges: function(input, data) {\n        var headerInfo = data.headerInfo;\n        var OutPixelTypeArray = this.getDataTypeArray(headerInfo.imageType);\n        var rangeBytes = headerInfo.numDims * this.getDataTypeSize(headerInfo.imageType);\n        var minValues = this.readSubArray(input, data.ptr, OutPixelTypeArray, rangeBytes);\n        var maxValues = this.readSubArray(input, data.ptr + rangeBytes, OutPixelTypeArray, rangeBytes);\n        data.ptr += (2 * rangeBytes);\n        var i, equal = true;\n        for (i = 0; i < headerInfo.numDims; i++) {\n          if (minValues[i] !== maxValues[i]) {\n            equal = false;\n            break;\n          }\n        }\n        headerInfo.minValues = minValues;\n        headerInfo.maxValues = maxValues;\n        return equal;\n      },\n\n      readSubArray: function(input, ptr, OutPixelTypeArray, numBytes) {\n        var rawData;\n        if (OutPixelTypeArray === Uint8Array) {\n          rawData = new Uint8Array(input, ptr, numBytes);\n        }\n        else {\n          var arrayBuf = new ArrayBuffer(numBytes);\n          var store8 = new Uint8Array(arrayBuf);\n          store8.set(new Uint8Array(input, ptr, numBytes));\n          rawData = new OutPixelTypeArray(arrayBuf);\n        }\n        return rawData;\n      },\n\n      readMask: function(input, data) {\n        var ptr = data.ptr;\n        var headerInfo = data.headerInfo;\n        var numPixels = headerInfo.width * headerInfo.height;\n        var numValidPixel = headerInfo.numValidPixel;\n\n        var view = new DataView(input, ptr, 4);\n        var mask = {};\n        mask.numBytes = view.getUint32(0, true);\n        ptr += 4;\n\n        // Mask Data\n        if ((0 === numValidPixel || numPixels === numValidPixel) && 0 !== mask.numBytes) {\n          throw (\"invalid mask\");\n        }\n        var bitset, resultMask;\n        if (numValidPixel === 0) {\n          bitset = new Uint8Array(Math.ceil(numPixels / 8));\n          mask.bitset = bitset;\n          resultMask = new Uint8Array(numPixels);\n          data.pixels.resultMask = resultMask;\n          ptr += mask.numBytes;\n        }// ????? else if (data.mask.numBytes > 0 && data.mask.numBytes< data.numValidPixel) {\n        else if (mask.numBytes > 0) {\n          bitset = new Uint8Array(Math.ceil(numPixels / 8));\n          view = new DataView(input, ptr, mask.numBytes);\n          var cnt = view.getInt16(0, true);\n          var ip = 2, op = 0, val = 0;\n          do {\n            if (cnt > 0) {\n              while (cnt--) { bitset[op++] = view.getUint8(ip++); }\n            } else {\n              val = view.getUint8(ip++);\n              cnt = -cnt;\n              while (cnt--) { bitset[op++] = val; }\n            }\n            cnt = view.getInt16(ip, true);\n            ip += 2;\n          } while (ip < mask.numBytes);\n          if ((cnt !== -32768) || (op < bitset.length)) {\n            throw \"Unexpected end of mask RLE encoding\";\n          }\n\n          resultMask = new Uint8Array(numPixels);\n          var mb = 0, k = 0;\n\n          for (k = 0; k < numPixels; k++) {\n            if (k & 7) {\n              mb = bitset[k >> 3];\n              mb <<= k & 7;\n            }\n            else {\n              mb = bitset[k >> 3];\n            }\n            if (mb & 128) {\n              resultMask[k] = 1;\n            }\n          }\n          data.pixels.resultMask = resultMask;\n\n          mask.bitset = bitset;\n          ptr += mask.numBytes;\n        }\n        data.ptr = ptr;\n        data.mask = mask;\n        return true;\n      },\n\n      readDataOneSweep: function(input, data, OutPixelTypeArray, useBSQForOutputDim) {\n        var ptr = data.ptr;\n        var headerInfo = data.headerInfo;\n        var numDims = headerInfo.numDims;\n        var numPixels = headerInfo.width * headerInfo.height;\n        var imageType = headerInfo.imageType;\n        var numBytes = headerInfo.numValidPixel * Lerc2Helpers.getDataTypeSize(imageType) * numDims;\n        //data.pixels.numBytes = numBytes;\n        var rawData;\n        var mask = data.pixels.resultMask;\n        if (OutPixelTypeArray === Uint8Array) {\n          rawData = new Uint8Array(input, ptr, numBytes);\n        }\n        else {\n          var arrayBuf = new ArrayBuffer(numBytes);\n          var store8 = new Uint8Array(arrayBuf);\n          store8.set(new Uint8Array(input, ptr, numBytes));\n          rawData = new OutPixelTypeArray(arrayBuf);\n        }\n        if (rawData.length === numPixels * numDims) {\n          if (useBSQForOutputDim) {\n            data.pixels.resultPixels = Lerc2Helpers.swapDimensionOrder(rawData, numPixels, numDims, OutPixelTypeArray, true);\n          }\n          else {\n            data.pixels.resultPixels = rawData;\n          }\n        }\n        else  //mask\n        {\n          data.pixels.resultPixels = new OutPixelTypeArray(numPixels * numDims);\n          var z = 0, k = 0, i = 0, nStart = 0;\n          if (numDims > 1) {\n            if (useBSQForOutputDim) {\n              for (k = 0; k < numPixels; k++) {\n                if (mask[k]) {\n                  nStart = k;\n                  for (i = 0; i < numDims; i++, nStart+=numPixels) {\n                    data.pixels.resultPixels[nStart] = rawData[z++];\n                  }\n                }\n              }\n            }\n            else {\n              for (k = 0; k < numPixels; k++) {\n                if (mask[k]) {\n                  nStart = k * numDims;\n                  for (i = 0; i < numDims; i++) {\n                    data.pixels.resultPixels[nStart + i] = rawData[z++];\n                  }\n                }\n              }\n            }\n          }\n          else {\n            for (k = 0; k < numPixels; k++) {\n              if (mask[k]) {\n                data.pixels.resultPixels[k] = rawData[z++];\n              }\n            }\n          }\n        }\n        ptr += numBytes;\n        data.ptr = ptr;       //return data;\n        return true;\n      },\n\n      readHuffmanTree: function(input, data) {\n        var BITS_MAX = this.HUFFMAN_LUT_BITS_MAX; //8 is slow for the large test image\n        //var size_max = 1 << BITS_MAX;\n        /* ************************\n        * reading code table\n        *************************/\n        var view = new DataView(input, data.ptr, 16);\n        data.ptr += 16;\n        var version = view.getInt32(0, true);\n        if (version < 2) {\n          throw \"unsupported Huffman version\";\n        }\n        var size = view.getInt32(4, true);\n        var i0 = view.getInt32(8, true);\n        var i1 = view.getInt32(12, true);\n        if (i0 >= i1) {\n          return false;\n        }\n        var blockDataBuffer = new Uint32Array(i1 - i0);\n        Lerc2Helpers.decodeBits(input, data, blockDataBuffer);\n        var codeTable = []; //size\n        var i, j, k, len;\n\n        for (i = i0; i < i1; i++) {\n          j = i - (i < size ? 0 : size);//wrap around\n          codeTable[j] = { first: blockDataBuffer[i - i0], second: null };\n        }\n\n        var dataBytes = input.byteLength - data.ptr;\n        var dataWords = Math.ceil(dataBytes / 4);\n        var arrayBuf = new ArrayBuffer(dataWords * 4);\n        var store8 = new Uint8Array(arrayBuf);\n        store8.set(new Uint8Array(input, data.ptr, dataBytes));\n        var stuffedData = new Uint32Array(arrayBuf); //must start from x*4\n        var bitPos = 0, word, srcPtr = 0;\n        word = stuffedData[0];\n        for (i = i0; i < i1; i++) {\n          j = i - (i < size ? 0 : size);//wrap around\n          len = codeTable[j].first;\n          if (len > 0) {\n            codeTable[j].second = (word << bitPos) >>> (32 - len);\n\n            if (32 - bitPos >= len) {\n              bitPos += len;\n              if (bitPos === 32) {\n                bitPos = 0;\n                srcPtr++;\n                word = stuffedData[srcPtr];\n              }\n            }\n            else {\n              bitPos += len - 32;\n              srcPtr++;\n              word = stuffedData[srcPtr];\n              codeTable[j].second |= word >>> (32 - bitPos);\n            }\n          }\n        }\n\n        //finished reading code table\n\n        /* ************************\n        * building lut\n        *************************/\n        var numBitsLUT = 0, numBitsLUTQick = 0;\n        var tree = new TreeNode();\n        for (i = 0; i < codeTable.length; i++) {\n          if (codeTable[i] !== undefined) {\n            numBitsLUT = Math.max(numBitsLUT, codeTable[i].first);\n          }\n        }\n        if (numBitsLUT >= BITS_MAX) {\n          numBitsLUTQick = BITS_MAX;\n        }\n        else {\n          numBitsLUTQick = numBitsLUT;\n        }\n        // for debugging purpose\n        // if (numBitsLUT >= 30) {\n        //   console.log(\"WARning, large NUM LUT BITS IS \" + numBitsLUT);\n        // }\n        var decodeLut = [], entry, code, numEntries, jj, currentBit, node;\n        for (i = i0; i < i1; i++) {\n          j = i - (i < size ? 0 : size);//wrap around\n          len = codeTable[j].first;\n          if (len > 0) {\n            entry = [len, j];\n            if (len <= numBitsLUTQick) {\n              code = codeTable[j].second << (numBitsLUTQick - len);\n              numEntries = 1 << (numBitsLUTQick - len);\n              for (k = 0; k < numEntries; k++) {\n                decodeLut[code | k] = entry;\n              }\n            }\n            else {\n              //build tree\n              code = codeTable[j].second;\n              node = tree;\n              for (jj = len - 1; jj >= 0; jj--) {\n                currentBit = code >>> jj & 1; //no left shift as length could be 30,31\n                if (currentBit) {\n                  if (!node.right) {\n                    node.right = new TreeNode();\n                  }\n                  node = node.right;\n                }\n                else {\n                  if (!node.left) {\n                    node.left = new TreeNode();\n                  }\n                  node = node.left;\n                }\n                if (jj === 0 && !node.val) {\n                  node.val = entry[1];\n                }\n              }\n            }\n          }\n        }\n        return {\n          decodeLut: decodeLut,\n          numBitsLUTQick: numBitsLUTQick,\n          numBitsLUT: numBitsLUT,\n          tree: tree,\n          stuffedData: stuffedData,\n          srcPtr: srcPtr,\n          bitPos: bitPos\n        };\n      },\n\n      readHuffman: function(input, data, OutPixelTypeArray, useBSQForOutputDim) {\n        var headerInfo = data.headerInfo;\n        var numDims = headerInfo.numDims;\n        var height = data.headerInfo.height;\n        var width = data.headerInfo.width;\n        var numPixels = width * height;\n        //var size_max = 1 << BITS_MAX;\n        /* ************************\n        * reading huffman structure info\n        *************************/\n        var huffmanInfo = this.readHuffmanTree(input, data);\n        var decodeLut = huffmanInfo.decodeLut;\n        var tree = huffmanInfo.tree;\n        //stuffedData includes huffman headers\n        var stuffedData = huffmanInfo.stuffedData;\n        var srcPtr = huffmanInfo.srcPtr;\n        var bitPos = huffmanInfo.bitPos;\n        var numBitsLUTQick = huffmanInfo.numBitsLUTQick;\n        var numBitsLUT = huffmanInfo.numBitsLUT;\n        var offset = data.headerInfo.imageType === 0 ? 128 : 0;\n        /*************************\n        *  decode\n        ***************************/\n        var node, val, delta, mask = data.pixels.resultMask, valTmp, valTmpQuick, currentBit;\n        var i, j, k, ii;\n        var prevVal = 0;\n        if (bitPos > 0) {\n          srcPtr++;\n          bitPos = 0;\n        }\n        var word = stuffedData[srcPtr];\n        var deltaEncode = data.encodeMode === 1;\n        var resultPixelsAllDim = new OutPixelTypeArray(numPixels * numDims);\n        var resultPixels = resultPixelsAllDim;\n        var iDim;\n        // TODO: reevaluate the need to keep inlined decoding code as IE support is phasing out\n        if (numDims < 2 || deltaEncode) {\n          for (iDim = 0; iDim < numDims; iDim++) {\n            if (numDims > 1) {\n              //get the mem block of current dimension\n              resultPixels = new OutPixelTypeArray(resultPixelsAllDim.buffer, numPixels * iDim, numPixels);\n              prevVal = 0;\n            }\n            if (data.headerInfo.numValidPixel === width * height) { //all valid\n              for (k = 0, i = 0; i < height; i++) {\n                for (j = 0; j < width; j++, k++) {\n                  val = 0;\n                  valTmp = (word << bitPos) >>> (32 - numBitsLUTQick);\n                  valTmpQuick = valTmp;// >>> deltaBits;\n                  if (32 - bitPos < numBitsLUTQick) {\n                    valTmp |= ((stuffedData[srcPtr + 1]) >>> (64 - bitPos - numBitsLUTQick));\n                    valTmpQuick = valTmp;// >>> deltaBits;\n                  }\n                  if (decodeLut[valTmpQuick])    // if there, move the correct number of bits and done\n                  {\n                    val = decodeLut[valTmpQuick][1];\n                    bitPos += decodeLut[valTmpQuick][0];\n                  }\n                  else {\n                    valTmp = (word << bitPos) >>> (32 - numBitsLUT);\n                    valTmpQuick = valTmp;// >>> deltaBits;\n                    if (32 - bitPos < numBitsLUT) {\n                      valTmp |= ((stuffedData[srcPtr + 1]) >>> (64 - bitPos - numBitsLUT));\n                      valTmpQuick = valTmp;// >>> deltaBits;\n                    }\n                    node = tree;\n                    for (ii = 0; ii < numBitsLUT; ii++) {\n                      currentBit = valTmp >>> (numBitsLUT - ii - 1) & 1;\n                      node = currentBit ? node.right : node.left;\n                      if (!(node.left || node.right)) {\n                        val = node.val;\n                        bitPos = bitPos + ii + 1;\n                        break;\n                      }\n                    }\n                  }\n    \n                  if (bitPos >= 32) {\n                    bitPos -= 32;\n                    srcPtr++;\n                    word = stuffedData[srcPtr];\n                  }\n    \n                  delta = val - offset;\n                  if (deltaEncode) {\n                    if (j > 0) {\n                      delta += prevVal;    // use overflow\n                    }\n                    else if (i > 0) {\n                      delta += resultPixels[k - width];\n                    }\n                    else {\n                      delta += prevVal;\n                    }\n                    delta &= 0xFF; //overflow\n                    resultPixels[k] = delta;//overflow\n                    prevVal = delta;\n                  }\n                  else {\n                    resultPixels[k] = delta;\n                  }\n                }\n              }\n            }\n            else { //not all valid, use mask\n              for (k = 0, i = 0; i < height; i++) {\n                for (j = 0; j < width; j++, k++) {\n                  if (mask[k]) {\n                    val = 0;\n                    valTmp = (word << bitPos) >>> (32 - numBitsLUTQick);\n                    valTmpQuick = valTmp;// >>> deltaBits;\n                    if (32 - bitPos < numBitsLUTQick) {\n                      valTmp |= ((stuffedData[srcPtr + 1]) >>> (64 - bitPos - numBitsLUTQick));\n                      valTmpQuick = valTmp;// >>> deltaBits;\n                    }\n                    if (decodeLut[valTmpQuick])    // if there, move the correct number of bits and done\n                    {\n                      val = decodeLut[valTmpQuick][1];\n                      bitPos += decodeLut[valTmpQuick][0];\n                    }\n                    else {\n                      valTmp = (word << bitPos) >>> (32 - numBitsLUT);\n                      valTmpQuick = valTmp;// >>> deltaBits;\n                      if (32 - bitPos < numBitsLUT) {\n                        valTmp |= ((stuffedData[srcPtr + 1]) >>> (64 - bitPos - numBitsLUT));\n                        valTmpQuick = valTmp;// >>> deltaBits;\n                      }\n                      node = tree;\n                      for (ii = 0; ii < numBitsLUT; ii++) {\n                        currentBit = valTmp >>> (numBitsLUT - ii - 1) & 1;\n                        node = currentBit ? node.right : node.left;\n                        if (!(node.left || node.right)) {\n                          val = node.val;\n                          bitPos = bitPos + ii + 1;\n                          break;\n                        }\n                      }\n                    }\n    \n                    if (bitPos >= 32) {\n                      bitPos -= 32;\n                      srcPtr++;\n                      word = stuffedData[srcPtr];\n                    }\n    \n                    delta = val - offset;\n                    if (deltaEncode) {\n                      if (j > 0 && mask[k - 1]) {\n                        delta += prevVal;    // use overflow\n                      }\n                      else if (i > 0 && mask[k - width]) {\n                        delta += resultPixels[k - width];\n                      }\n                      else {\n                        delta += prevVal;\n                      }\n    \n                      delta &= 0xFF; //overflow\n                      resultPixels[k] = delta;//overflow\n                      prevVal = delta;\n                    }\n                    else {\n                      resultPixels[k] = delta;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        else {\n          for (k = 0, i = 0; i < height; i++) {\n            for (j = 0; j < width; j++) {\n              k = i * width + j;\n              if (!mask || mask[k]) {\n                for (iDim = 0; iDim < numDims; iDim++, k+=numPixels) {\n                  val = 0;\n                  valTmp = (word << bitPos) >>> (32 - numBitsLUTQick);\n                  valTmpQuick = valTmp;\n                  if (32 - bitPos < numBitsLUTQick) {\n                    valTmp |= ((stuffedData[srcPtr + 1]) >>> (64 - bitPos - numBitsLUTQick));\n                    valTmpQuick = valTmp;\n                  }\n                  if (decodeLut[valTmpQuick])\n                  {\n                    val = decodeLut[valTmpQuick][1];\n                    bitPos += decodeLut[valTmpQuick][0];\n                  }\n                  else {\n                    valTmp = (word << bitPos) >>> (32 - numBitsLUT);\n                    valTmpQuick = valTmp;\n                    if (32 - bitPos < numBitsLUT) {\n                      valTmp |= ((stuffedData[srcPtr + 1]) >>> (64 - bitPos - numBitsLUT));\n                      valTmpQuick = valTmp;\n                    }\n                    node = tree;\n                    for (ii = 0; ii < numBitsLUT; ii++) {\n                      currentBit = valTmp >>> (numBitsLUT - ii - 1) & 1;\n                      node = currentBit ? node.right : node.left;\n                      if (!(node.left || node.right)) {\n                        val = node.val;\n                        bitPos = bitPos + ii + 1;\n                        break;\n                      }\n                    }\n                  }\n\n                  if (bitPos >= 32) {\n                    bitPos -= 32;\n                    srcPtr++;\n                    word = stuffedData[srcPtr];\n                  }\n\n                  delta = val - offset;\n                  resultPixels[k] = delta;\n                }\n              }\n            }\n          }\n        }\n        data.ptr = data.ptr + (srcPtr + 1) * 4 + (bitPos > 0 ? 4 : 0);\n        data.pixels.resultPixels = resultPixelsAllDim;\n        //swap for BIP layout\n        if (numDims > 1 && !useBSQForOutputDim) {\n          data.pixels.resultPixels = Lerc2Helpers.swapDimensionOrder(resultPixelsAllDim, numPixels, numDims, OutPixelTypeArray);\n        }\n      },\n\n      decodeBits: function(input, data, blockDataBuffer, offset, iDim) {\n        {\n          //bitstuff encoding is 3\n          var headerInfo = data.headerInfo;\n          var fileVersion = headerInfo.fileVersion;\n          //var block = {};\n          var blockPtr = 0;\n          var viewByteLength = ((input.byteLength - data.ptr) >= 5) ? 5 : (input.byteLength - data.ptr);\n          var view = new DataView(input, data.ptr, viewByteLength);\n          var headerByte = view.getUint8(0);\n          blockPtr++;\n          var bits67 = headerByte >> 6;\n          var n = (bits67 === 0) ? 4 : 3 - bits67;\n          var doLut = (headerByte & 32) > 0 ? true : false;//5th bit\n          var numBits = headerByte & 31;\n          var numElements = 0;\n          if (n === 1) {\n            numElements = view.getUint8(blockPtr); blockPtr++;\n          } else if (n === 2) {\n            numElements = view.getUint16(blockPtr, true); blockPtr += 2;\n          } else if (n === 4) {\n            numElements = view.getUint32(blockPtr, true); blockPtr += 4;\n          } else {\n            throw \"Invalid valid pixel count type\";\n          }\n          //fix: huffman codes are bit stuffed, but not bound by data's max value, so need to use originalUnstuff\n          //offset = offset || 0;\n          var scale = 2 * headerInfo.maxZError;\n          var stuffedData, arrayBuf, store8, dataBytes, dataWords;\n          var lutArr, lutData, lutBytes, lutBitsPerElement, bitsPerPixel;\n          var zMax = headerInfo.numDims > 1 ? headerInfo.maxValues[iDim] : headerInfo.zMax;\n          if (doLut) {\n            data.counter.lut++;\n            lutBytes = view.getUint8(blockPtr);\n            lutBitsPerElement = numBits;\n            blockPtr++;\n            dataBytes = Math.ceil((lutBytes - 1) * numBits / 8);\n            dataWords = Math.ceil(dataBytes / 4);\n            arrayBuf = new ArrayBuffer(dataWords * 4);\n            store8 = new Uint8Array(arrayBuf);\n\n            data.ptr += blockPtr;\n            store8.set(new Uint8Array(input, data.ptr, dataBytes));\n\n            lutData = new Uint32Array(arrayBuf);\n            data.ptr += dataBytes;\n\n            bitsPerPixel = 0;\n            while ((lutBytes - 1) >>> bitsPerPixel) {\n              bitsPerPixel++;\n            }\n            dataBytes = Math.ceil(numElements * bitsPerPixel / 8);\n            dataWords = Math.ceil(dataBytes / 4);\n            arrayBuf = new ArrayBuffer(dataWords * 4);\n            store8 = new Uint8Array(arrayBuf);\n            store8.set(new Uint8Array(input, data.ptr, dataBytes));\n            stuffedData = new Uint32Array(arrayBuf);\n            data.ptr += dataBytes;\n            if (fileVersion >= 3) {\n              lutArr = BitStuffer.unstuffLUT2(lutData, numBits, lutBytes - 1, offset, scale, zMax);\n            }\n            else {\n              lutArr = BitStuffer.unstuffLUT(lutData, numBits, lutBytes - 1, offset, scale, zMax);\n            }\n            //lutArr.unshift(0);\n            if (fileVersion >= 3) {\n              //BitStuffer.unstuff2(block, blockDataBuffer, headerInfo.zMax);\n              BitStuffer.unstuff2(stuffedData, blockDataBuffer, bitsPerPixel, numElements, lutArr);\n            }\n            else {\n              BitStuffer.unstuff(stuffedData, blockDataBuffer, bitsPerPixel, numElements, lutArr);\n            }\n          }\n          else {\n            //console.debug(\"bitstuffer\");\n            data.counter.bitstuffer++;\n            bitsPerPixel = numBits;\n            data.ptr += blockPtr;\n            if (bitsPerPixel > 0) {\n              dataBytes = Math.ceil(numElements * bitsPerPixel / 8);\n              dataWords = Math.ceil(dataBytes / 4);\n              arrayBuf = new ArrayBuffer(dataWords * 4);\n              store8 = new Uint8Array(arrayBuf);\n              store8.set(new Uint8Array(input, data.ptr, dataBytes));\n              stuffedData = new Uint32Array(arrayBuf);\n              data.ptr += dataBytes;\n              if (fileVersion >= 3) {\n                if (offset == null) {\n                  BitStuffer.originalUnstuff2(stuffedData, blockDataBuffer, bitsPerPixel, numElements);\n                }\n                else {\n                  BitStuffer.unstuff2(stuffedData, blockDataBuffer, bitsPerPixel, numElements, false, offset, scale, zMax);\n                }\n              }\n              else {\n                if (offset == null) {\n                  BitStuffer.originalUnstuff(stuffedData, blockDataBuffer, bitsPerPixel, numElements);\n                }\n                else {\n                  BitStuffer.unstuff(stuffedData, blockDataBuffer, bitsPerPixel, numElements, false, offset, scale, zMax);\n                }\n              }\n            }\n          }\n        }\n\n      },\n\n      readTiles: function(input, data, OutPixelTypeArray, useBSQForOutputDim) {\n        var headerInfo = data.headerInfo;\n        var width = headerInfo.width;\n        var height = headerInfo.height;\n        var numPixels = width * height;\n        var microBlockSize = headerInfo.microBlockSize;\n        var imageType = headerInfo.imageType;\n        var dataTypeSize = Lerc2Helpers.getDataTypeSize(imageType);\n        var numBlocksX = Math.ceil(width / microBlockSize);\n        var numBlocksY = Math.ceil(height / microBlockSize);\n        data.pixels.numBlocksY = numBlocksY;\n        data.pixels.numBlocksX = numBlocksX;\n        data.pixels.ptr = 0;\n        var row = 0, col = 0, blockY = 0, blockX = 0, thisBlockHeight = 0, thisBlockWidth = 0, bytesLeft = 0, headerByte = 0, bits67 = 0, testCode = 0, outPtr = 0, outStride = 0, numBytes = 0, bytesleft = 0, z = 0, blockPtr = 0;\n        var view, block, arrayBuf, store8, rawData;\n        var blockEncoding;\n        var blockDataBuffer = new OutPixelTypeArray(microBlockSize * microBlockSize);\n        var lastBlockHeight = (height % microBlockSize) || microBlockSize;\n        var lastBlockWidth = (width % microBlockSize) || microBlockSize;\n        var offsetType, offset;\n        var numDims = headerInfo.numDims, iDim;\n        var mask = data.pixels.resultMask;\n        var resultPixels = data.pixels.resultPixels;\n        var fileVersion = headerInfo.fileVersion;\n        var fileVersionCheckNum = fileVersion >= 5 ? 14 : 15;\n        var isDiffEncoding;\n        var zMax = headerInfo.zMax;\n        //var resultPixelsAllDim = resultPixels;\n        var resultPixelsPrevDim;\n        for (blockY = 0; blockY < numBlocksY; blockY++) {\n          thisBlockHeight = (blockY !== numBlocksY - 1) ? microBlockSize : lastBlockHeight;\n          for (blockX = 0; blockX < numBlocksX; blockX++) {\n            //console.debug(\"y\" + blockY + \" x\" + blockX);\n            thisBlockWidth = (blockX !== numBlocksX - 1) ? microBlockSize : lastBlockWidth;\n\n            outPtr = blockY * width * microBlockSize + blockX * microBlockSize;\n            outStride = width - thisBlockWidth;\n\n            for (iDim = 0; iDim < numDims; iDim++) {\n              if (numDims > 1) {\n                resultPixelsPrevDim = resultPixels;\n                outPtr = blockY * width * microBlockSize + blockX * microBlockSize;\n                resultPixels = new OutPixelTypeArray(data.pixels.resultPixels.buffer, numPixels * iDim * dataTypeSize, numPixels);\n                zMax = headerInfo.maxValues[iDim];\n              } else {\n                resultPixelsPrevDim = null;\n              }\n              bytesLeft = input.byteLength - data.ptr;\n              view = new DataView(input, data.ptr, Math.min(10, bytesLeft));\n              block = {};\n              blockPtr = 0;\n              headerByte = view.getUint8(0);\n              blockPtr++;\n              isDiffEncoding = headerInfo.fileVersion >= 5 ? headerByte & 4 : 0;\n              bits67 = (headerByte >> 6) & 0xFF;\n              testCode = (headerByte >> 2) & fileVersionCheckNum;    // use bits 2345 for integrity check\n              if (testCode !== (((blockX * microBlockSize) >> 3) & fileVersionCheckNum)) {\n                throw \"integrity issue\";\n              }\n\n              if (isDiffEncoding && iDim === 0) {\n                throw \"integrity issue\";\n              }\n\n              blockEncoding = headerByte & 3;\n              if (blockEncoding > 3) {\n                data.ptr += blockPtr;\n                throw \"Invalid block encoding (\" + blockEncoding + \")\";\n              }\n              else if (blockEncoding === 2) { //constant 0\n                if (isDiffEncoding) {\n                  if (mask) {\n                    for (row = 0; row < thisBlockHeight; row++) {\n                      for (col = 0; col < thisBlockWidth; col++) {\n                        if (mask[outPtr]) {\n                          resultPixels[outPtr] = resultPixelsPrevDim[outPtr];\n                        }\n                        outPtr++;\n                      }\n                    }\n                  }\n                  else {\n                    for (row = 0; row < thisBlockHeight; row++) {\n                      for (col = 0; col < thisBlockWidth; col++) {\n                        resultPixels[outPtr] = resultPixelsPrevDim[outPtr];\n                        outPtr++;\n                      }\n                    }\n                  }\n                }\n                data.counter.constant++;\n                data.ptr += blockPtr;\n                continue;\n              }\n              else if (blockEncoding === 0) {  //uncompressed\n                if (isDiffEncoding) {\n                  // doesn't make sense, should not happen\n                  throw \"integrity issue\";\n                }\n                data.counter.uncompressed++;\n                data.ptr += blockPtr;\n                numBytes = thisBlockHeight * thisBlockWidth * dataTypeSize;\n                bytesleft = input.byteLength - data.ptr;\n                numBytes = numBytes < bytesleft ? numBytes : bytesleft;\n                //bit alignment\n                arrayBuf = new ArrayBuffer((numBytes % dataTypeSize) === 0 ? numBytes : (numBytes + dataTypeSize - numBytes % dataTypeSize));\n                store8 = new Uint8Array(arrayBuf);\n                store8.set(new Uint8Array(input, data.ptr, numBytes));\n                rawData = new OutPixelTypeArray(arrayBuf);\n                z = 0;\n                if (mask) {\n                  for (row = 0; row < thisBlockHeight; row++) {\n                    for (col = 0; col < thisBlockWidth; col++) {\n                      if (mask[outPtr]) {\n                        resultPixels[outPtr] = rawData[z++];\n                      }\n                      outPtr++;\n                    }\n                    outPtr += outStride;\n                  }\n                }\n                else {//all valid\n                  for (row = 0; row < thisBlockHeight; row++) {\n                    for (col = 0; col < thisBlockWidth; col++) {\n                      resultPixels[outPtr++] = rawData[z++];\n                    }\n                    outPtr += outStride;\n                  }\n                }\n                data.ptr += z * dataTypeSize;\n              }\n              else { //1 or 3\n                offsetType = Lerc2Helpers.getDataTypeUsed((isDiffEncoding && imageType < 6) ? 4 : imageType, bits67);\n                offset = Lerc2Helpers.getOnePixel(block, blockPtr, offsetType, view);\n                blockPtr += Lerc2Helpers.getDataTypeSize(offsetType);\n                if (blockEncoding === 3) //constant offset value\n                {\n                  data.ptr += blockPtr;\n                  data.counter.constantoffset++;\n                  //you can delete the following resultMask case in favor of performance because val is constant and users use nodata mask, otherwise nodatavalue post processing handles it too.\n                  //while the above statement is true, we're not doing it as we want to keep invalid pixel value at 0 rather than arbitrary values\n                  if (mask) {\n                    for (row = 0; row < thisBlockHeight; row++) {\n                      for (col = 0; col < thisBlockWidth; col++) {\n                        if (mask[outPtr]) {\n                          resultPixels[outPtr] = isDiffEncoding ? Math.min(zMax, resultPixelsPrevDim[outPtr] + offset) : offset;\n                        }\n                        outPtr++;\n                      }\n                      outPtr += outStride;\n                    }\n                  }\n                  else {\n                    for (row = 0; row < thisBlockHeight; row++) {\n                      for (col = 0; col < thisBlockWidth; col++) {\n                        resultPixels[outPtr] = isDiffEncoding ? Math.min(zMax, resultPixelsPrevDim[outPtr] + offset) : offset;\n                        outPtr++;\n                      }\n                      outPtr += outStride;\n                    }\n                  }\n                }\n                else { //bitstuff encoding is 3\n                  data.ptr += blockPtr;\n                  //heavy lifting\n                  Lerc2Helpers.decodeBits(input, data, blockDataBuffer, offset, iDim);\n                  blockPtr = 0;\n                  // duplicate code to favor performance, diff encoding is for multidimension only\n                  if (isDiffEncoding) {\n                    if (mask) {\n                      for (row = 0; row < thisBlockHeight; row++) {\n                        for (col = 0; col < thisBlockWidth; col++) {\n                          if (mask[outPtr]) {\n                            resultPixels[outPtr] = blockDataBuffer[blockPtr++] + resultPixelsPrevDim[outPtr];\n                          }\n                          outPtr++;\n                        }\n                        outPtr += outStride;\n                      }\n                    }\n                    else {\n                      for (row = 0; row < thisBlockHeight; row++) {\n                        for (col = 0; col < thisBlockWidth; col++) {\n                          resultPixels[outPtr] = blockDataBuffer[blockPtr++] + resultPixelsPrevDim[outPtr];\n                          outPtr++;\n                        }\n                        outPtr += outStride;\n                      }\n                    }\n                  }\n                  else if (mask) {\n                    for (row = 0; row < thisBlockHeight; row++) {\n                      for (col = 0; col < thisBlockWidth; col++) {\n                        if (mask[outPtr]) {\n                          resultPixels[outPtr] = blockDataBuffer[blockPtr++];\n                        }\n                        outPtr++;\n                      }\n                      outPtr += outStride;\n                    }\n                  }\n                  else {\n                    for (row = 0; row < thisBlockHeight; row++) {\n                      for (col = 0; col < thisBlockWidth; col++) {\n                        resultPixels[outPtr++] = blockDataBuffer[blockPtr++];\n                      }\n                      outPtr += outStride;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        //swap for BIP: it's always easier for clients to handle BSQ so we keep existing logic and introduce a swap here to minimze changes\n        if (numDims > 1 && !useBSQForOutputDim) {\n          data.pixels.resultPixels = Lerc2Helpers.swapDimensionOrder(data.pixels.resultPixels, numPixels, numDims, OutPixelTypeArray);\n        }\n      },\n\n      /*****************\n      *  private methods (helper methods)\n      *****************/\n\n      formatFileInfo: function(data) {\n        return {\n          \"fileIdentifierString\": data.headerInfo.fileIdentifierString,\n          \"fileVersion\": data.headerInfo.fileVersion,\n          \"imageType\": data.headerInfo.imageType,\n          \"height\": data.headerInfo.height,\n          \"width\": data.headerInfo.width,\n          \"numValidPixel\": data.headerInfo.numValidPixel,\n          \"microBlockSize\": data.headerInfo.microBlockSize,\n          \"blobSize\": data.headerInfo.blobSize,\n          \"maxZError\": data.headerInfo.maxZError,\n          \"pixelType\": Lerc2Helpers.getPixelType(data.headerInfo.imageType),\n          \"eofOffset\": data.eofOffset,\n          \"mask\": data.mask ? {\n            \"numBytes\": data.mask.numBytes\n          } : null,\n          \"pixels\": {\n            \"numBlocksX\": data.pixels.numBlocksX,\n            \"numBlocksY\": data.pixels.numBlocksY,\n            //\"numBytes\": data.pixels.numBytes,\n            \"maxValue\": data.headerInfo.zMax,\n            \"minValue\": data.headerInfo.zMin,\n            \"noDataValue\": data.noDataValue\n          }\n        };\n      },\n\n      constructConstantSurface: function(data, useBSQForOutputDim) {\n        var val = data.headerInfo.zMax;\n        var valMin = data.headerInfo.zMin;\n        var maxValues = data.headerInfo.maxValues;\n        var numDims = data.headerInfo.numDims;\n        var numPixels = data.headerInfo.height * data.headerInfo.width;\n        var i = 0, k = 0, nStart = 0;\n        var mask = data.pixels.resultMask;\n        var resultPixels = data.pixels.resultPixels;\n        if (mask) {\n          if (numDims > 1) {\n            if (useBSQForOutputDim) {\n              for (i = 0; i < numDims; i++) {\n                nStart = i * numPixels;\n                val = maxValues[i];\n                for (k = 0; k < numPixels; k++) {\n                  if (mask[k]) {\n                    resultPixels[nStart + k] = val;\n                  }\n                }\n              }  \n            }\n            else {\n              for (k = 0; k < numPixels; k++) {\n                if (mask[k]) {\n                  nStart = k * numDims;\n                  for (i = 0; i < numDims; i++) {\n                    resultPixels[nStart + numDims] = maxValues[i];\n                  }\n                }\n              }\n            }\n          }\n          else {\n            for (k = 0; k < numPixels; k++) {\n              if (mask[k]) {\n                resultPixels[k] = val;\n              }\n            }\n          }\n        }\n        else {\n          if (numDims > 1 && valMin !== val) {\n            if (useBSQForOutputDim) {\n              for (i = 0; i < numDims; i++) {\n                nStart = i * numPixels;\n                val = maxValues[i];\n                for (k = 0; k < numPixels; k++) {\n                  resultPixels[nStart + k] = val;\n                }\n              }\n            }\n            else {\n              for (k = 0; k < numPixels; k++) {\n                nStart = k * numDims;\n                for (i = 0; i < numDims; i++) {\n                  resultPixels[nStart + i] = maxValues[i];\n                }\n              }\n            }\n          }\n          else {\n            for (k = 0; k < numPixels * numDims; k++) {\n              resultPixels[k] = val;\n            }\n          }\n        }\n        return;\n      },\n\n      getDataTypeArray: function(t) {\n        var tp;\n        switch (t) {\n          case 0: //char\n            tp = Int8Array;\n            break;\n          case 1: //byte\n            tp = Uint8Array;\n            break;\n          case 2: //short\n            tp = Int16Array;\n            break;\n          case 3: //ushort\n            tp = Uint16Array;\n            break;\n          case 4:\n            tp = Int32Array;\n            break;\n          case 5:\n            tp = Uint32Array;\n            break;\n          case 6:\n            tp = Float32Array;\n            break;\n          case 7:\n            tp = Float64Array;\n            break;\n          default:\n            tp = Float32Array;\n        }\n        return tp;\n      },\n\n      getPixelType: function(t) {\n        var tp;\n        switch (t) {\n          case 0: //char\n            tp = \"S8\";\n            break;\n          case 1: //byte\n            tp = \"U8\";\n            break;\n          case 2: //short\n            tp = \"S16\";\n            break;\n          case 3: //ushort\n            tp = \"U16\";\n            break;\n          case 4:\n            tp = \"S32\";\n            break;\n          case 5:\n            tp = \"U32\";\n            break;\n          case 6:\n            tp = \"F32\";\n            break;\n          case 7:\n            tp = \"F64\";\n            break;\n          default:\n            tp = \"F32\";\n        }\n        return tp;\n      },\n\n      isValidPixelValue: function(t, val) {\n        if (val == null) {\n          return false;\n        }\n        var isValid;\n        switch (t) {\n          case 0: //char\n            isValid = val >= -128 && val <= 127;\n            break;\n          case 1: //byte  (unsigned char)\n            isValid = val >= 0 && val <= 255;\n            break;\n          case 2: //short\n            isValid = val >= -32768 && val <= 32767;\n            break;\n          case 3: //ushort\n            isValid = val >= 0 && val <= 65536;\n            break;\n          case 4: //int 32\n            isValid = val >= -2147483648 && val <= 2147483647;\n            break;\n          case 5: //uinit 32\n            isValid = val >= 0 && val <= 4294967296;\n            break;\n          case 6:\n            isValid = val >= -3.4027999387901484e+38 && val <= 3.4027999387901484e+38;\n            break;\n          case 7:\n            isValid = val >= -1.7976931348623157e+308 && val <= 1.7976931348623157e+308;\n            break;\n          default:\n            isValid = false;\n        }\n        return isValid;\n      },\n\n      getDataTypeSize: function(t) {\n        var s = 0;\n        switch (t) {\n          case 0: //ubyte\n          case 1: //byte\n            s = 1;\n            break;\n          case 2: //short\n          case 3: //ushort\n            s = 2;\n            break;\n          case 4:\n          case 5:\n          case 6:\n            s = 4;\n            break;\n          case 7:\n            s = 8;\n            break;\n          default:\n            s = t;\n        }\n        return s;\n      },\n\n      getDataTypeUsed: function(dt, tc) {\n        var t = dt;\n        switch (dt) {\n          case 2: //short\n          case 4: //long\n            t = dt - tc;\n            break;\n          case 3: //ushort\n          case 5: //ulong\n            t = dt - 2 * tc;\n            break;\n          case 6: //float\n            if (0 === tc) {\n              t = dt;\n            }\n            else if (1 === tc) {\n              t = 2;\n            }\n            else {\n              t = 1;//byte\n            }\n            break;\n          case 7: //double\n            if (0 === tc) {\n              t = dt;\n            }\n            else {\n              t = dt - 2 * tc + 1;\n            }\n            break;\n          default:\n            t = dt;\n            break;\n        }\n        return t;\n      },\n\n      getOnePixel: function(block, blockPtr, offsetType, view) {\n        var temp = 0;\n        switch (offsetType) {\n          case 0: //char\n            temp = view.getInt8(blockPtr);\n            break;\n          case 1: //byte\n            temp = view.getUint8(blockPtr);\n            break;\n          case 2:\n            temp = view.getInt16(blockPtr, true);\n            break;\n          case 3:\n            temp = view.getUint16(blockPtr, true);\n            break;\n          case 4:\n            temp = view.getInt32(blockPtr, true);\n            break;\n          case 5:\n            temp = view.getUInt32(blockPtr, true);\n            break;\n          case 6:\n            temp = view.getFloat32(blockPtr, true);\n            break;\n          case 7:\n            temp = view.getFloat64(blockPtr, true);\n            break;\n          default:\n            throw (\"the decoder does not understand this pixel type\");\n        }\n        return temp;\n      },\n\n      swapDimensionOrder: function(pixels, numPixels, numDims, OutPixelTypeArray, inputIsBIP) {\n        var i = 0, j = 0, iDim = 0, temp = 0, swap = pixels;\n        if (numDims > 1) {\n          swap = new OutPixelTypeArray(numPixels * numDims);\n          if (inputIsBIP) {\n            for (i=0; i<numPixels; i++) {\n              temp = i;\n              for (iDim=0; iDim < numDims; iDim++, temp += numPixels) {\n                swap[temp] = pixels[j++];\n              }\n            }  \n          }\n          else {\n            for (i=0; i<numPixels; i++) {\n              temp = i;\n              for (iDim=0; iDim < numDims; iDim++, temp += numPixels) {\n                swap[j++] = pixels[temp];\n              }\n            }\n          }\n        }\n        return swap;\n      }\n    };\n\n    /***************************************************\n    *private class for a tree node. Huffman code is in Lerc2Helpers\n    ****************************************************/\n    var TreeNode = function(val, left, right) {\n      this.val = val;\n      this.left = left;\n      this.right = right;\n    };\n\n    var Lerc2Decode = {\n      /*\n      * ********removed options compared to LERC1. We can bring some of them back if needed.\n       * removed pixel type. LERC2 is typed and doesn't require user to give pixel type\n       * changed encodedMaskData to maskData. LERC2 's js version make it faster to use maskData directly.\n       * removed returnMask. mask is used by LERC2 internally and is cost free. In case of user input mask, it's returned as well and has neglible cost.\n       * removed nodatavalue. Because LERC2 pixels are typed, nodatavalue will sacrify a useful value for many types (8bit, 16bit) etc,\n       *       user has to be knowledgable enough about raster and their data to avoid usability issues. so nodata value is simply removed now.\n       *       We can add it back later if their's a clear requirement.\n       * removed encodedMask. This option was not implemented in LercDecode. It can be done after decoding (less efficient)\n       * removed computeUsedBitDepths.\n       *\n       *\n       * response changes compared to LERC1\n       * 1. encodedMaskData is not available\n       * 2. noDataValue is optional (returns only if user's noDataValue is with in the valid data type range)\n       * 3. maskData is always available\n      */\n      /*****************\n      *  public properties\n      ******************/\n      //HUFFMAN_LUT_BITS_MAX: 12, //use 2^12 lut, not configurable\n\n      /*****************\n      *  public methods\n      *****************/\n\n      /**\n       * Decode a LERC2 byte stream and return an object containing the pixel data and optional metadata.\n       *\n       * @param {ArrayBuffer} input The LERC input byte stream\n       * @param {object} [options] options Decoding options\n       * @param {number} [options.inputOffset] The number of bytes to skip in the input byte stream. A valid LERC file is expected at that position\n       * @param {boolean} [options.returnFileInfo] If true, the return value will have a fileInfo property that contains metadata obtained from the LERC headers and the decoding process\n       * @param {boolean} [options.returnPixelInterleavedDims]  If true, returned dimensions are pixel-interleaved, a.k.a [p1_dim0, p1_dim1, p1_dimn, p2_dim0...], default is [p1_dim0, p2_dim0, ..., p1_dim1, p2_dim1...]\n       */\n      decode: function(/*byte array*/ input, /*object*/ options) {\n        //currently there's a bug in the sparse array, so please do not set to false\n        options = options || {};\n        var noDataValue = options.noDataValue;\n\n        //initialize\n        var i = 0, data = {};\n        data.ptr = options.inputOffset || 0;\n        data.pixels = {};\n\n        // File header\n        if (!Lerc2Helpers.readHeaderInfo(input, data)) {\n          return;\n        }\n\n        var headerInfo = data.headerInfo;\n        var fileVersion = headerInfo.fileVersion;\n        var OutPixelTypeArray = Lerc2Helpers.getDataTypeArray(headerInfo.imageType);\n\n        // version check\n        if (fileVersion > 5) {\n          throw \"unsupported lerc version 2.\" + fileVersion;\n        }\n\n        // Mask Header\n        Lerc2Helpers.readMask(input, data);\n        if (headerInfo.numValidPixel !== headerInfo.width * headerInfo.height && !data.pixels.resultMask) {\n          data.pixels.resultMask = options.maskData;\n        }\n\n        var numPixels = headerInfo.width * headerInfo.height;\n        data.pixels.resultPixels = new OutPixelTypeArray(numPixels * headerInfo.numDims);\n\n        data.counter = {\n          onesweep: 0,\n          uncompressed: 0,\n          lut: 0,\n          bitstuffer: 0,\n          constant: 0,\n          constantoffset: 0\n        };\n        var useBSQForOutputDim = !options.returnPixelInterleavedDims;\n        if (headerInfo.numValidPixel !== 0) {\n          //not tested\n          if (headerInfo.zMax === headerInfo.zMin) //constant surface\n          {\n            Lerc2Helpers.constructConstantSurface(data, useBSQForOutputDim);\n          }\n          else if (fileVersion >= 4 && Lerc2Helpers.checkMinMaxRanges(input, data)) {\n            Lerc2Helpers.constructConstantSurface(data, useBSQForOutputDim);\n          }\n          else {\n            var view = new DataView(input, data.ptr, 2);\n            var bReadDataOneSweep = view.getUint8(0);\n            data.ptr++;\n            if (bReadDataOneSweep) {\n              //console.debug(\"OneSweep\");\n              Lerc2Helpers.readDataOneSweep(input, data, OutPixelTypeArray, useBSQForOutputDim);\n            }\n            else {\n              //lerc2.1: //bitstuffing + lut\n              //lerc2.2: //bitstuffing + lut + huffman\n              //lerc2.3: new bitstuffer\n              if (fileVersion > 1 && headerInfo.imageType <= 1 && Math.abs(headerInfo.maxZError - 0.5) < 0.00001) {\n                //this is 2.x plus 8 bit (unsigned and signed) data, possiblity of Huffman\n                var flagHuffman = view.getUint8(1);\n                data.ptr++;\n                data.encodeMode = flagHuffman;\n                if (flagHuffman > 2 || (fileVersion < 4 && flagHuffman > 1)) {\n                  throw \"Invalid Huffman flag \" + flagHuffman;\n                }\n                if (flagHuffman) {//1 - delta Huffman, 2 - Huffman\n                  //console.log(\"Huffman\");\n                  Lerc2Helpers.readHuffman(input, data, OutPixelTypeArray, useBSQForOutputDim);\n                }\n                else {\n                  //console.log(\"Tiles\");\n                  Lerc2Helpers.readTiles(input, data, OutPixelTypeArray, useBSQForOutputDim);\n                }\n              }\n              else { //lerc2.x non-8 bit data\n                //console.log(\"Tiles\");\n                Lerc2Helpers.readTiles(input, data, OutPixelTypeArray, useBSQForOutputDim);\n              }\n            }\n          }\n        }\n\n        data.eofOffset = data.ptr;\n        var diff;\n        if (options.inputOffset) {\n          diff = data.headerInfo.blobSize + options.inputOffset - data.ptr;\n          if (Math.abs(diff) >= 1) {\n            //console.debug(\"incorrect eof: dataptr \" + data.ptr + \" offset \" + options.inputOffset + \" blobsize \" + data.headerInfo.blobSize + \" diff: \" + diff);\n            data.eofOffset = options.inputOffset + data.headerInfo.blobSize;\n          }\n        }\n        else {\n          diff = data.headerInfo.blobSize - data.ptr;\n          if (Math.abs(diff) >= 1) {\n            //console.debug(\"incorrect first band eof: dataptr \" + data.ptr + \" blobsize \" + data.headerInfo.blobSize + \" diff: \" + diff);\n            data.eofOffset = data.headerInfo.blobSize;\n          }\n        }\n\n        var result = {\n          width: headerInfo.width,\n          height: headerInfo.height,\n          pixelData: data.pixels.resultPixels,\n          minValue: headerInfo.zMin,\n          maxValue: headerInfo.zMax,\n          validPixelCount: headerInfo.numValidPixel,\n          dimCount: headerInfo.numDims,\n          dimStats: {\n            minValues: headerInfo.minValues,\n            maxValues: headerInfo.maxValues\n          },\n          maskData: data.pixels.resultMask\n          //noDataValue: noDataValue\n        };\n\n        //we should remove this if there's no existing client\n        //optional noDataValue processing, it's user's responsiblity\n        if (data.pixels.resultMask && Lerc2Helpers.isValidPixelValue(headerInfo.imageType, noDataValue)) {\n          var mask = data.pixels.resultMask;\n          for (i = 0; i < numPixels; i++) {\n            if (!mask[i]) {\n              result.pixelData[i] = noDataValue;\n            }\n          }\n          result.noDataValue = noDataValue;\n        }\n        data.noDataValue = noDataValue;\n        if (options.returnFileInfo) {\n          result.fileInfo = Lerc2Helpers.formatFileInfo(data);\n        }\n        return result;\n      },\n\n      getBandCount: function(/*byte array*/ input) {\n        var count = 0;\n        var i = 0;\n        var temp = {};\n        temp.ptr = 0;\n        temp.pixels = {};\n        while (i < input.byteLength - 58) {\n          Lerc2Helpers.readHeaderInfo(input, temp);\n          i += temp.headerInfo.blobSize;\n          count++;\n          temp.ptr = i;\n        }\n        return count;\n      }\n    };\n\n    return Lerc2Decode;\n  })();\n\n  var isPlatformLittleEndian = (function() {\n    var a = new ArrayBuffer(4);\n    var b = new Uint8Array(a);\n    var c = new Uint32Array(a);\n    c[0] = 1;\n    return b[0] === 1;\n  })();\n\n  var Lerc = {\n    /************wrapper**********************************************/\n    /**\n     * A wrapper for decoding both LERC1 and LERC2 byte streams capable of handling multiband pixel blocks for various pixel types.\n     *\n     * @alias module:Lerc\n     * @param {ArrayBuffer} input The LERC input byte stream\n     * @param {object} [options] The decoding options below are optional.\n     * @param {number} [options.inputOffset] The number of bytes to skip in the input byte stream. A valid Lerc file is expected at that position.\n     * @param {string} [options.pixelType] (LERC1 only) Default value is F32. Valid pixel types for input are U8/S8/S16/U16/S32/U32/F32.\n     * @param {number} [options.noDataValue] (LERC1 only). It is recommended to use the returned mask instead of setting this value.\n     * @param {boolean} [options.returnPixelInterleavedDims] (nDim LERC2 only) If true, returned dimensions are pixel-interleaved, a.k.a [p1_dim0, p1_dim1, p1_dimn, p2_dim0...], default is [p1_dim0, p2_dim0, ..., p1_dim1, p2_dim1...]\n     * @returns {{width, height, pixels, pixelType, mask, statistics}}\n       * @property {number} width Width of decoded image.\n       * @property {number} height Height of decoded image.\n       * @property {array} pixels [band1, band2, …] Each band is a typed array of width*height.\n       * @property {string} pixelType The type of pixels represented in the output.\n       * @property {mask} mask Typed array with a size of width*height, or null if all pixels are valid.\n       * @property {array} statistics [statistics_band1, statistics_band2, …] Each element is a statistics object representing min and max values\n    **/\n    decode: function(encodedData, options) {\n      if (!isPlatformLittleEndian) {\n        throw \"Big endian system is not supported.\";\n      }\n      options = options || {};\n      var inputOffset = options.inputOffset || 0;\n      var fileIdView = new Uint8Array(encodedData, inputOffset, 10);\n      var fileIdentifierString = String.fromCharCode.apply(null, fileIdView);\n      var lerc, majorVersion;\n      if (fileIdentifierString.trim() === \"CntZImage\") {\n        lerc = LercDecode;\n        majorVersion = 1;\n      }\n      else if (fileIdentifierString.substring(0, 5) === \"Lerc2\") {\n        lerc = Lerc2Decode;\n        majorVersion = 2;\n      }\n      else {\n        throw \"Unexpected file identifier string: \" + fileIdentifierString;\n      }\n\n      var iPlane = 0, eof = encodedData.byteLength - 10, encodedMaskData, bandMasks = [], bandMask, maskData;\n      var decodedPixelBlock = {\n        width: 0,\n        height: 0,\n        pixels: [],\n        pixelType: options.pixelType,\n        mask: null,\n        statistics: []\n      };\n      var uniqueBandMaskCount = 0;\n\n      while (inputOffset < eof) {\n        var result = lerc.decode(encodedData, {\n          inputOffset: inputOffset,//for both lerc1 and lerc2\n          encodedMaskData: encodedMaskData,//lerc1 only\n          maskData: maskData,//lerc2 only\n          returnMask: iPlane === 0 ? true : false,//lerc1 only\n          returnEncodedMask: iPlane === 0 ? true : false,//lerc1 only\n          returnFileInfo: true,//for both lerc1 and lerc2\n          returnPixelInterleavedDims: options.returnPixelInterleavedDims,//for ndim lerc2 only\n          pixelType: options.pixelType || null,//lerc1 only\n          noDataValue: options.noDataValue || null//lerc1 only\n        });\n\n        inputOffset = result.fileInfo.eofOffset;\n        maskData = result.maskData;//lerc2\n        if (iPlane === 0) {\n          encodedMaskData = result.encodedMaskData;//lerc1\n          decodedPixelBlock.width = result.width;\n          decodedPixelBlock.height = result.height;\n          decodedPixelBlock.dimCount = result.dimCount || 1;\n          //decodedPixelBlock.dimStats = decodedPixelBlock.dimStats;\n          decodedPixelBlock.pixelType = result.pixelType || result.fileInfo.pixelType;\n          decodedPixelBlock.mask = maskData;\n        }\n        if (majorVersion > 1) {\n          if (maskData) {\n            bandMasks.push(maskData);\n          }\n          if (result.fileInfo.mask && result.fileInfo.mask.numBytes > 0) {\n            uniqueBandMaskCount++;\n          }\n        }\n\n        iPlane++;\n        decodedPixelBlock.pixels.push(result.pixelData);\n        decodedPixelBlock.statistics.push({\n          minValue: result.minValue,\n          maxValue: result.maxValue,\n          noDataValue: result.noDataValue,\n          dimStats: result.dimStats\n        });\n      }\n      var i, j, numPixels;\n      if (majorVersion > 1 && uniqueBandMaskCount > 1) {\n        numPixels = decodedPixelBlock.width * decodedPixelBlock.height;\n        decodedPixelBlock.bandMasks = bandMasks;\n        maskData = new Uint8Array(numPixels);\n        maskData.set(bandMasks[0]);\n        for (i = 1; i < bandMasks.length; i++) {\n          bandMask = bandMasks[i];\n          for (j = 0; j < numPixels; j++) {\n            maskData[j] = maskData[j] & bandMask[j];\n          }\n        }\n        decodedPixelBlock.maskData = maskData;\n      }\n\n      return decodedPixelBlock;\n    }\n  };\n\n  if (typeof define === \"function\" && define.amd) {/* jshint ignore:line */\n    //amd loaders such as dojo and requireJS\n    //http://wiki.commonjs.org/wiki/Modules/AsynchronousDefinition\n    define([], function() { return Lerc; });/* jshint ignore:line */\n  }\n  else if (typeof module !== \"undefined\" && module.exports) {/* jshint ignore:line */\n    //commonJS module 1.0/1.1/1.1.1 systems, such as nodeJS\n    //http://wiki.commonjs.org/wiki/Modules\n    module.exports = Lerc;/* jshint ignore:line */\n  }\n  else {\n    //assign to this, most likely window\n    this.Lerc = Lerc;\n  }\n\n})();\n","let init;\nlet instance;\nlet heap;\nconst IMPORT_OBJECT = {\n  env: {\n    emscripten_notify_memory_growth: function (index) {\n      heap = new Uint8Array(instance.exports.memory.buffer);\n    }\n  }\n};\n/**\r\n * ZSTD (Zstandard) decoder.\r\n */\nclass ZSTDDecoder {\n  init() {\n    if (init) return init;\n    if (typeof fetch !== 'undefined') {\n      // Web.\n      init = fetch('data:application/wasm;base64,' + wasm).then(response => response.arrayBuffer()).then(arrayBuffer => WebAssembly.instantiate(arrayBuffer, IMPORT_OBJECT)).then(this._init);\n    } else {\n      // Node.js.\n      init = WebAssembly.instantiate(Buffer.from(wasm, 'base64'), IMPORT_OBJECT).then(this._init);\n    }\n    return init;\n  }\n  _init(result) {\n    instance = result.instance;\n    IMPORT_OBJECT.env.emscripten_notify_memory_growth(0); // initialize heap.\n  }\n\n  decode(array, uncompressedSize = 0) {\n    if (!instance) throw new Error(`ZSTDDecoder: Await .init() before decoding.`);\n    // Write compressed data into WASM memory.\n    const compressedSize = array.byteLength;\n    const compressedPtr = instance.exports.malloc(compressedSize);\n    heap.set(array, compressedPtr);\n    // Decompress into WASM memory.\n    uncompressedSize = uncompressedSize || Number(instance.exports.ZSTD_findDecompressedSize(compressedPtr, compressedSize));\n    const uncompressedPtr = instance.exports.malloc(uncompressedSize);\n    const actualSize = instance.exports.ZSTD_decompress(uncompressedPtr, uncompressedSize, compressedPtr, compressedSize);\n    // Read decompressed data and free WASM memory.\n    const dec = heap.slice(uncompressedPtr, uncompressedPtr + actualSize);\n    instance.exports.free(compressedPtr);\n    instance.exports.free(uncompressedPtr);\n    return dec;\n  }\n}\n/**\r\n * BSD License\r\n *\r\n * For Zstandard software\r\n *\r\n * Copyright (c) 2016-present, Yann Collet, Facebook, Inc. All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *    list of conditions and the following disclaimer.\r\n *\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n *  * Neither the name Facebook nor the names of its contributors may be used to\r\n *    endorse or promote products derived from this software without specific\r\n *    prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\r\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\r\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\n// wasm:begin\nconst wasm = '';\n// wasm:end\n\nexport { ZSTDDecoder };\n//# sourceMappingURL=zstddec.modern.js.map\n","import { inflate } from 'pako';\nimport Lerc from 'lerc';\nimport { ZSTDDecoder } from 'zstddec';\nimport BaseDecoder from './basedecoder.js';\nimport { LercParameters, LercAddCompression } from '../globals.js';\n\nexport const zstd = new ZSTDDecoder();\n\nexport default class LercDecoder extends BaseDecoder {\n  constructor(fileDirectory) {\n    super();\n\n    this.planarConfiguration = typeof fileDirectory.PlanarConfiguration !== 'undefined' ? fileDirectory.PlanarConfiguration : 1;\n    this.samplesPerPixel = typeof fileDirectory.SamplesPerPixel !== 'undefined' ? fileDirectory.SamplesPerPixel : 1;\n\n    this.addCompression = fileDirectory.LercParameters[LercParameters.AddCompression];\n  }\n\n  decodeBlock(buffer) {\n    switch (this.addCompression) {\n      case LercAddCompression.None:\n        break;\n      case LercAddCompression.Deflate:\n        buffer = inflate(new Uint8Array(buffer)).buffer; // eslint-disable-line no-param-reassign, prefer-destructuring\n        break;\n      case LercAddCompression.Zstandard:\n        buffer = zstd.decode(new Uint8Array(buffer)).buffer; // eslint-disable-line no-param-reassign, prefer-destructuring\n        break;\n      default:\n        throw new Error(`Unsupported LERC additional compression method identifier: ${this.addCompression}`);\n    }\n\n    const lercResult = Lerc.decode(buffer, { returnPixelInterleavedDims: this.planarConfiguration === 1 });\n    const lercData = lercResult.pixels[0];\n    return lercData.buffer;\n  }\n}\n","import BaseDecoder from './basedecoder.js';\n\n/**\n * class WebImageDecoder\n *\n * This decoder uses the browsers image decoding facilities to read image\n * formats like WebP when supported.\n */\nexport default class WebImageDecoder extends BaseDecoder {\n  constructor() {\n    super();\n    if (typeof createImageBitmap === 'undefined') {\n      throw new Error('Cannot decode WebImage as `createImageBitmap` is not available');\n    } else if (typeof document === 'undefined' && typeof OffscreenCanvas === 'undefined') {\n      throw new Error('Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available');\n    }\n  }\n\n  async decode(fileDirectory, buffer) {\n    const blob = new Blob([buffer]);\n    const imageBitmap = await createImageBitmap(blob);\n\n    let canvas;\n    if (typeof document !== 'undefined') {\n      canvas = document.createElement('canvas');\n      canvas.width = imageBitmap.width;\n      canvas.height = imageBitmap.height;\n    } else {\n      canvas = new OffscreenCanvas(imageBitmap.width, imageBitmap.height);\n    }\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(imageBitmap, 0, 0);\n\n    // TODO: check how many samples per pixel we have, and return RGB/RGBA accordingly\n    // it seems like GDAL always encodes via RGBA which does not require a translation\n\n    return ctx.getImageData(0, 0, imageBitmap.width, imageBitmap.height).data.buffer;\n  }\n}\n","/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;"],"names":["BaseEvent","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","ObjectEventType","Disposable","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","EventType","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","name","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","transform","c","d","e","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","transformStringDiv","toString","transformString","join","node","document","createElement","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","METERS_PER_UNIT","radians","PI","degrees","ft","m","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","add","destination","transformFn","sourceCode","destinationCode","clamp","squaredSegmentDistance","t","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","pow","round","ceil","delta","coordinate1","coordinate2","rotate","cosAngle","sinAngle","scale","worldsAway","sourceExtentWidth","getWorldsAway","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","warn","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","assignClosestPoint","maxDelta","isRing","tmpPoint","deflateCoordinates","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","ends","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","coordinatess","jj","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","linearRingIsClockwise","edge","orientLinearRings","right","isClockwise","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","linearRingsAreOriented","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","RenderEventType","Fill","color_","color","getColor","setColor","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringLength","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","width","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","ImageState","hasArea","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","z","luv","arg","_u","_v","l","u","v","xn","yn","zn","vn","yr","lchuv","hr","h","colorName","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","s","rgba","raw","Number","parsed","cstr","space","parts","alpha","names","base","parseInt","exec","dims","trim","split","shift","map","parseFloat","endsWith","match","parse","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","fromString","parseRgba","normalize","asArray","asColorLike","createCanvasContext2D","height","canvasPool","settings","canvas","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","w","save","globalAlpha","contextInstructions","label","executeLabelInstructions","drawImage","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","render","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","maxRadius","createPath_","fillStyle","lineWidth","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","setZIndex","defaultStyles","createDefaultStyle","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","LayerProperty","BaseLayer","background_","background","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","linear","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","module","p","_maxEntries","_minEntries","children","leaf","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","decodeFallback","src","reject","then","catch","handleLoad","unlisten","handleError","getKey","crossOrigin","shared","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","imageState_","src_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","cacheKey","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","encoded","typeHint","_","isStringColor","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","Color","Id","Band","Palette","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","initialValue","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","buildIcon","pointsName","requireNumber","shape","buildShape","evaluateRadius","circle","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","RBush","setRenderOrder","renderOrder","toStyleLike","styleFunction","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","sharedData","origin","LineString","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","RenderEvent","inversePixelTransform","pixelContext","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","drawTextOnPath","startM","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","CanvasImmediateRenderer","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","getGeometries","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","viewHints","getWrapX","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","layerIndex","makeScale","transformToString","clipped","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","getSquaredRenderTolerance","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","uid","update","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","startOrientation","prevEndIndex","orientation","inflateEnds","linearRingssCenter","getInteriorPointsOfMultiArray","midpoint","enableSimplifyTransformed","douglasPeuckerArray","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","getInterpolate","refresh","setAttributions","setState","attributionLike","VectorEventType","withCredentials","xhr","url","format","success","failure","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","isFinite","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","TileState","Tile","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","order","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","declutterLayers","previousElement","sourceState","oldChildren","childNodes","oldChild","newChild","replaceChildren","layers","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","pan","KeyboardZoom","platformModifierKey","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","TileCache","pruneExceptNewestZ","fromKey","TileRange","containsTileRange","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","drawSingle","pixelRound","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","tmpTileCoord","TileGrid","strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","withinExtentAndZ","updateCacheSize","tileCount","useTile","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","tileState","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","expandUrl","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","Cluster","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","uncurryThis","ReflectApply","uncurryThisGetter","ReflectGetOwnPropertyDescriptor","construct","ReflectConstruct","ReflectDefineProperty","ReflectGet","getOwnPropertyDescriptor","ReflectGetPrototypeOf","has","ReflectHas","ownKeys","ReflectOwnKeys","ReflectSet","setPrototypeOf","ReflectSetPrototypeOf","Reflect","iterator","SymbolIterator","species","SymbolSpecies","toStringTag","SymbolToStringTag","for","SymbolFor","Symbol","NativeObject","create","ObjectCreate","ObjectDefineProperty","freeze","ObjectFreeze","is","ObjectIs","NativeArrayPrototypeSymbolIterator","NativeArrayBuffer","ArrayBuffer","NativeSharedArrayBuffer","SharedArrayBuffer","TypedArray","Uint8Array","TypedArrayPrototype","entries","copyWithin","subarray","NativeUint8Array","NativeUint16Array","Uint16Array","NativeUint32Array","Uint32Array","NativeFloat32Array","Float32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","next","GeneratorPrototypeNext","IteratorPrototype","NativeWeakMap","DataView","getUint16","WeakMap","WeakMapPrototype","WeakMapPrototypeGet","arrayIterators","arrayIterator","generators","DummyArrayIteratorPrototype","generator","configurable","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","getAttribute","tag","attributeName","debug","xml","outer","opening","quotechars","char","pattern","getAttributeModule","exports","getAttribute$1","default","indexOfMatch","indexOfMatchModule","indexOfMatch$2","indexOfMatchEnd","indexOfMatchEndModule","indexOfMatchEnd$2","countSubstring","string","countSubstringModule","countSubstring$2","require$$0","require$$1","require$$2","findTagByName","nested","afterStart","relativeEnd","selfClosing","openings","closings","inner","findTagByNameModule","findTagByName$2","findTagsByName","tags","findTagsByNameModule","findTagsByName$1","fieldTagNames","fieldTags","BitsPerSample","ExtraSamples","SampleFormat","StripByteCounts","StripOffsets","StripRowCounts","TileByteCounts","TileOffsets","SubIFDs","fieldTypeNames","fieldTypes","LercParameters","LercAddCompression","geoKeyNames","geoKeys","registry","addDecoder","cases","importFn","lzw","jpeg","deflate","packbits","lerc","async","zstd","init","hardwareConcurrency","invert","oldObj","newObj","times","numTimes","results","tagName2Code","geoKeyName2Code","name2code","_binBE","nextZero","oincr","readUshort","buff","readShort","ui8","i16","readInt","i32","readUint","ui32","readASCII","readFloat","fl32","readDouble","fl64","writeUshort","writeUint","writeASCII","decodeRowAcc","decodeRowFloatingPoint","bytesPerSample","wc","copy","Float64Array","writeDouble","BaseDecoder","fileDirectory","decoded","decodeBlock","predictor","Predictor","isTiled","block","bitsPerSample","planarConfiguration","byteLength","applyPredictor","TileWidth","ImageWidth","TileLength","RowsPerStrip","ImageLength","PlanarConfiguration","OSM","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","toTransformString","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","TileLayer","hasImageData","ImageData","AttributeType","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","list","queue","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","Node","an","bp","sum","earcutModule","earcut$1","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","PaletteTexture","texture_","getTexture","gl","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","Attributes","numberToGlsl","arrayToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","uniformNameForVariable","variableName","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","createCompiler","compile","compilers","propName","inFragmentShader","computeType","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","functions","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","bandCount","colorIndex","bandIndex","numColors","palette","paletteTextures","paletteName","paletteTexture","compiler","colorToGlsl","events","FullScreenEventType","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","requestFullscreen","fullscreenEnabled","fullscreenElement","factory","define","amd","globalThis","VenoMaps","VenoMapsPlugin","initVenoMaps","mapblock","mapid","maplat","maplon","zoom_scroll","styleUrl","getsource","cluster_color","cluster_bg","infomap","dataset","lat","lon","decodeURIComponent","style_url","wrapoverlay","querySelector","allclosepanel","querySelectorAll","attributionel","setupdata","clusterSource","closepanels","thispanel","updateSearch","term","marker","infomarkerdom","datamarker","markerpos","markerint","markeroffset","labeloffset","markerimage","labelDom","infolabel","labeltext","infolabelDom","innerText","thisclosepanel","infobox","clusters","sourceVector","mindistance","cluster_bg_array","LayerVector","clusterstyle","originalFeature","openpanels","setupClusters","sourcesettings","baselayer","controlDefaults","interactionDefaults","vectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","getVectorContext","searchmap","searchterms","clusterMembers","alloverlays","paneltarget","thisoverlay","pixelFeatures","hit","loadMap","thismap","EOI_CODE","appendReversed","decompress","dictionaryIndex","dictionaryChar","dictionaryLength","initDictionary","getNext","byte","de","ef","fg","dg","chunk1","chunk2","hi","getByte","addToDictionary","getDictionaryReversed","rev","oldCode","oldVal","dctZigZag","Int32Array","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","decodeScan","initialOffset","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","bitsData","bitsCount","readBit","nextByte","decodeHuffman","tree","bit","receive","initialLength","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","component","decodeFunction","mcu","mcuCol","blockRow","blockCol","blocks","blocksPerLine","componentsLength","decodeFn","zz","huffmanTableDC","diff","pred","rs","huffmanTableAC","mcuExpected","blocksPerColumn","mcusPerColumn","usedResetInterval","buildComponentData","lines","samplesPerLine","R","quantizeAndInverse","dataOut","dataIn","qt","quantizationTable","v3","v4","v5","v6","v7","sample","scanLine","JpegStreamReader","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","resetFrames","frames","readUint16","readDataBlock","prepareComponents","componentId","maxH","maxV","scanLines","blocksPerLineForMcu","blocksPerColumnForMcu","fileMarker","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","precision","componentsOrder","componentsCount","qId","quantizationIdx","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","tableSpec","successiveApproximation","processed","getResult","cp","outComponents","oi","reader","JPEGTables","zero$1","buf","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","bi_reverse","gen_codes","bl_count","next_code","bits","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","bi_windup","smaller","depth","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","extra","sym_buf","build_tree","desc","stree","heap_max","xbits","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","level","strm","data_type","block_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","s1","s2","crcTable","table","makeTable","crc32_1","crc","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","msg","zero","slide_hash","wsize","w_size","hash_size","head","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","str","window_size","ins_h","deflate_stored","flush","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","method","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","old_flush","header","level_flags","hcrc","comment","os","gzhead_extra","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","common","TypeError","flattenChunks","STR_APPLY_UIA_OK","__","_utf8len","strings","string2buf","TextEncoder","encode","m_pos","str_len","buf_len","buf2string","TextDecoder","utf16buf","c_len","buf2binstring","utf8border","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","chunkSize","opt","gzip","ended","dict","_dict_set","flush_mode","_flush_mode","onData","onEnd","BAD$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","dolen","mode","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","opts","incr","mask","sym","root","drop","huff","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","flags","total","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","to","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","Inflate","inflateRaw","ungzip","constants","inflate_1","dataView","getInt8","getUint8","BitStuffer","Lerc2Helpers","TreeNode","LercDecode","CntZImage","skipMask","encodedMaskData","parsedData","inputOffset","noDataValue","defaultNoDataValue","uncompressedData","uncompressPixelValues","pixelType","returnMask","pixelData","resultPixels","minValue","maxValue","pixels","resultMask","maskData","returnEncodedMask","bitset","returnFileInfo","fileInfo","formatFileInfo","computeUsedBitDepths","bitDepths","TypedArrayClass","maskBitset","storeDecodedMask","currentValue","blockIdx","numX","numBlocksX","numY","numBlocksY","blockWidth","blockHeight","maxZError","MAX_VALUE","xx","yy","blockDataBuffer","thisBlockHeight","thisBlockWidth","blockData","blockPtr","constValue","maskByte","outPtr","outStride","encoding","rawData","unstuff","stuffedData","bitsPerPixel","numValidPixels","fileIdentifierString","fileVersion","imageType","eofOffset","numBytes","numBlocks","float32","fp","fileIdView","getInt32","getUint32","getFloat64","getFloat32","cnt","getInt16","ip","actualNumBlocksX","actualNumBlocksY","blockI","blockY","blockX","bytesLeft","headerByte","offsetType","numValidPixelsType","arrayBuf","numPixels","dataBytes","dataWords","bitMask","bitsLeft","nmax","numInvalidTailBytes","missingBits","Lerc2Decode","lutArr","bitPos","HUFFMAN_LUT_BITS_MAX","computeChecksumFletcher32","sum1","sum2","words","tlen","readHeaderInfo","ptr","headerInfo","keyLength","checksum","numDims","numValidPixel","microBlockSize","blobSize","zMin","zMax","checkMinMaxRanges","OutPixelTypeArray","getDataTypeArray","rangeBytes","getDataTypeSize","minValues","readSubArray","maxValues","equal","readMask","mb","readDataOneSweep","useBSQForOutputDim","swapDimensionOrder","nStart","readHuffmanTree","BITS_MAX","i0","i1","decodeBits","codeTable","second","word","srcPtr","numBitsLUT","numBitsLUTQick","numEntries","decodeLut","readHuffman","valTmp","valTmpQuick","huffmanInfo","prevVal","iDim","deltaEncode","encodeMode","resultPixelsAllDim","viewByteLength","bits67","doLut","numBits","numElements","store8","lutData","lutBytes","counter","lut","bitstuffer","readTiles","dataTypeSize","blockEncoding","isDiffEncoding","resultPixelsPrevDim","bytesleft","lastBlockHeight","lastBlockWidth","fileVersionCheckNum","uncompressed","getDataTypeUsed","getOnePixel","constantoffset","constant","getPixelType","constructConstantSurface","valMin","tp","Int8Array","Int16Array","isValidPixelValue","isValid","dt","tc","temp","getUInt32","inputIsBIP","swap","onesweep","returnPixelInterleavedDims","bReadDataOneSweep","flagHuffman","validPixelCount","dimCount","dimStats","getBandCount","isPlatformLittleEndian","Lerc","encodedData","majorVersion","bandMask","iPlane","eof","bandMasks","decodedPixelBlock","statistics","uniqueBandMaskCount","instance","IMPORT_OBJECT","env","emscripten_notify_memory_growth","memory","wasm","fetch","response","arrayBuffer","WebAssembly","instantiate","_init","Buffer","uncompressedSize","compressedSize","compressedPtr","malloc","ZSTD_findDecompressedSize","uncompressedPtr","actualSize","ZSTD_decompress","dec","free","samplesPerPixel","SamplesPerPixel","addCompression","createImageBitmap","blob","Blob","imageBitmap","Worker"],"mappings":"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"}